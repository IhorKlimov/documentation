{
  "packages": [
    {
      "classes": [
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [
              {
                "declarationSignature": "public static com.layer.sdk.LayerClient newInstance(android.content.Context context, java.lang.String layerAppId)",
                "name": "newInstance",
                "callSignature": "newInstance(context, layerAppId)",
                "comment": "Generates a new LayerClient, ready for authentication and sending messages.\n\n<p>\n    Note: Avoid creating LayerClient on main UI thread. Do it asynchronously on a background thread.\n</p>",
                "returns": {
                  "description": "a new LayerClient, ready to authenticate.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "context",
                    "description": "Context in which to create this client.",
                    "type": "android.content.Context"
                  },
                  {
                    "name": "layerAppId",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public static com.layer.sdk.LayerClient newInstance(android.content.Context context, java.lang.String layerAppId, com.layer.sdk.LayerClient.Options options)",
                "name": "newInstance",
                "callSignature": "newInstance(context, layerAppId, options)",
                "comment": "Generates a new LayerClient, ready for authentication and sending messages.\n\n<p>\n    Note: Avoid creating LayerClient on main UI thread. Do it asynchronously on a background thread.\n</p>",
                "returns": {
                  "description": "a new LayerClient, ready to authenticate.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "context",
                    "description": "Context in which to create this client.",
                    "type": "android.content.Context"
                  },
                  {
                    "name": "layerAppId",
                    "type": "String"
                  },
                  {
                    "name": "options",
                    "description": "Set of options for LayerClient (use <code>new Options().googleCloudMessagingSenderId(String)</code>)",
                    "type": "Options"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public static void applicationCreated(android.app.Application application)",
                "name": "applicationCreated",
                "callSignature": "applicationCreated(application)",
                "comment": "Called from `Application.onCreate()` to start Application lifecycle tracking.\n<p>\nNote: `applicationCreated(Application)` should be called before `LayerClient.newInstance(...)`\n</p>",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "application",
                    "description": "Application to track.",
                    "type": "android.app.Application"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public static void setLoggingEnabled(android.content.Context context, boolean enabled)",
                "name": "setLoggingEnabled",
                "callSignature": "setLoggingEnabled(context, enabled)",
                "comment": "Layer sdk logs to logcat using the tag 'LayerSDK'.\n\nThe log levels can be set using one of the following ways.\n1. set system property : setprop log.tag.LayerSDK [Log Level]\n2. Create a local.prop file with the following in it: 'log.tag.LayerSDK= [Log Level]' and\nplace that in /data/local.prop.\nPossible values for '[Log Level]' are VERBOSE, DEBUG, INFO, WARN, ERROR, ASSERT or SUPPRESS.\n\nEg: To enable verbose logging, use 'adb shell setprop log.tag.LayerSDK VERBOSE'\n\nFor details, refer to\nhttp://developer.android.com/reference/android/util/Log.html#isLoggable(java.lang.String, int)",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "context",
                    "type": "android.content.Context"
                  },
                  {
                    "name": "enabled",
                    "type": "boolean"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public static boolean isLoggingEnabled()",
                "name": "isLoggingEnabled",
                "callSignature": "isLoggingEnabled()",
                "comment": "Returns `true` if logging was enabled through the LayerClient, or `false` otherwise.  This\ndoes not factor environment-enabled logging set through `setprop`.",
                "returns": {
                  "description": "`true` if logging was enabled through the LayerClient, or `false` otherwise.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public static java.lang.String getInfo()",
                "name": "getInfo",
                "callSignature": "getInfo()",
                "comment": "Returns some basic information about the current device and Layer SDK.",
                "returns": {
                  "description": "A String containing basic information about the current device and Layer SDK.",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public static java.lang.String getVersion()",
                "name": "getVersion",
                "callSignature": "getVersion()",
                "comment": "Returns a String representation of the current Layer SDK version.",
                "returns": {
                  "description": "A String representation of the current Layer SDK version.",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public static void sendLogs(com.layer.sdk.LayerClient client, android.app.Activity from)",
                "name": "sendLogs",
                "callSignature": "sendLogs(client, from)",
                "comment": "Creates an email with logs and other relevant information.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "description": ": LayerClient object when available. Can be set to null",
                    "type": "LayerClient"
                  },
                  {
                    "name": "from",
                    "description": ": The activity to use as context for sending out the email containing logs\n\n              Note: The logs might include personally identifiable information. Please refer to\n              Layer's privacy policy [ https://layer.com/privacy ] to understand how Layer handles PII.",
                    "type": "android.app.Activity"
                  }
                ],
                "exceptions": []
              }
            ],
            "instance": [
              {
                "declarationSignature": "public abstract boolean isClosed()",
                "name": "isClosed",
                "callSignature": "isClosed()",
                "comment": "Returns true if this LayerClient has been closed.  Closed LayerClients can no longer be used,\nand another should be created with LayerClient.newInstance().",
                "returns": {
                  "description": "true if this LayerClient has been closed.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void close()",
                "name": "close",
                "callSignature": "close()",
                "comment": "Closes this LayerClient, releasing database and network resources.  Useful for ensuring\nreferences drop out of memory when the LayerClient is no longer needed.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.messaging.Conversation newConversation(com.layer.sdk.messaging.ConversationOptions options, java.util.List participants)",
                "name": "newConversation",
                "callSignature": "newConversation(options, participants)",
                "comment": "Constructs a new Conversation with the provided participants.",
                "returns": {
                  "description": "a Conversation ready for messages.",
                  "type": "Conversation"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "options",
                    "type": "ConversationOptions"
                  },
                  {
                    "name": "participants",
                    "description": "List of participants to include in this Conversation.",
                    "type": "List"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.Conversation newConversation(com.layer.sdk.messaging.ConversationOptions options, java.lang.String... participants)",
                "name": "newConversation",
                "callSignature": "newConversation(options, participants)",
                "comment": null,
                "returns": {
                  "type": "Conversation"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "options",
                    "type": "ConversationOptions"
                  },
                  {
                    "name": "participants",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.Conversation newConversation(java.util.List participants)",
                "name": "newConversation",
                "callSignature": "newConversation(participants)",
                "comment": null,
                "returns": {
                  "type": "Conversation"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "participants",
                    "type": "List"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.Conversation newConversation(java.lang.String... participants)",
                "name": "newConversation",
                "callSignature": "newConversation(participants)",
                "comment": null,
                "returns": {
                  "type": "Conversation"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "participants",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List getConversationIds()",
                "name": "getConversationIds",
                "callSignature": "getConversationIds()",
                "comment": "Returns a list of all Conversation IDs.  Conversation objects can then be loaded by ID with\neither the getConversation(id) or getConversations(ids) methods.  Such a combination can be\nused to implement a lazy loading mechanism, such as an Adapter for a Conversation ListView.\nThe Adapter can be made dynamic by implementing a LayerChangeEventListener interface.",
                "returns": {
                  "description": "a list of all Conversation IDs.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.messaging.Conversation getConversation(android.net.Uri id)",
                "name": "getConversation",
                "callSignature": "getConversation(id)",
                "comment": "Returns the existing Conversation with the given ID, or `null`.",
                "returns": {
                  "description": "the Conversation with the provided ID, or `null` if no such Conversation exists.",
                  "type": "Conversation"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "id",
                    "description": "the unique identifier for the Conversation to return.",
                    "type": "android.net.Uri"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List getConversations(java.util.List ids)",
                "name": "getConversations",
                "callSignature": "getConversations(ids)",
                "comment": "Returns a list of Conversations with the given IDs.",
                "returns": {
                  "description": "a list of Conversations with the provided IDs, or an empty list if none are found.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "ids",
                    "description": "the unique identifiers for the Conversations to return.",
                    "type": "List"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.util.List getConversations(android.net.Uri... ids)",
                "name": "getConversations",
                "callSignature": "getConversations(ids)",
                "comment": null,
                "returns": {
                  "type": "List"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "ids",
                    "type": "android.net.Uri"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List getConversations()",
                "name": "getConversations",
                "callSignature": "getConversations()",
                "comment": "Returns all stored Conversations.  To preserve memory and enable a more responsive user\nexperience, consider using a combination of getConversationIds() and one of the get-by-ID\nmethods instead.",
                "returns": {
                  "description": "a list of all Conversations.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List getConversationsWithParticipants(java.util.List participants)",
                "name": "getConversationsWithParticipants",
                "callSignature": "getConversationsWithParticipants(participants)",
                "comment": "Returns a list of Conversations containing the exact set of participants (and no more).",
                "returns": {
                  "description": "a list of Conversations containing the provided participants, or an empty list if\nnone are found.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "participants",
                    "description": "the list of participants to find Conversations for.",
                    "type": "List"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.util.List getConversationsWithParticipants(java.lang.String... participants)",
                "name": "getConversationsWithParticipants",
                "callSignature": "getConversationsWithParticipants(participants)",
                "comment": null,
                "returns": {
                  "type": "List"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "participants",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.messaging.Message newMessage(com.layer.sdk.messaging.MessageOptions options, java.util.List messageParts)",
                "name": "newMessage",
                "callSignature": "newMessage(options, messageParts)",
                "comment": "Constructs a new Message with the given options and list of MessageParts.",
                "returns": {
                  "description": "A new Message ready to send.",
                  "type": "Message"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "options",
                    "description": "MessageOptions.",
                    "type": "MessageOptions"
                  },
                  {
                    "name": "messageParts",
                    "description": "A list of MessageParts to send with this Message.",
                    "type": "List"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.Message newMessage(com.layer.sdk.messaging.MessageOptions options, com.layer.sdk.messaging.MessagePart... messageParts)",
                "name": "newMessage",
                "callSignature": "newMessage(options, messageParts)",
                "comment": null,
                "returns": {
                  "type": "Message"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "options",
                    "type": "MessageOptions"
                  },
                  {
                    "name": "messageParts",
                    "type": "MessagePart"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.Message newMessage(java.util.List messageParts)",
                "name": "newMessage",
                "callSignature": "newMessage(messageParts)",
                "comment": "Constructs a new Message with the given list of MessageParts.",
                "returns": {
                  "description": "A new Message ready to send.",
                  "type": "Message"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "messageParts",
                    "description": "A list of MessageParts to send with this Message.",
                    "type": "List"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.Message newMessage(com.layer.sdk.messaging.MessagePart... messageParts)",
                "name": "newMessage",
                "callSignature": "newMessage(messageParts)",
                "comment": null,
                "returns": {
                  "type": "Message"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "messageParts",
                    "type": "MessagePart"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.messaging.MessagePart newMessagePart(java.lang.String mimeType, byte[] data)",
                "name": "newMessagePart",
                "callSignature": "newMessagePart(mimeType, data)",
                "comment": "Creates a MessagePart with the given MIME type and data.",
                "returns": {
                  "type": "MessagePart"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "mimeType",
                    "description": "A MIME type identifying the type of data contained in the given data object.",
                    "type": "String"
                  },
                  {
                    "name": "data",
                    "description": "The data to be embedded in the MessagePart.",
                    "type": "byte"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.messaging.MessagePart newMessagePart(java.lang.String mimeType, java.io.InputStream stream, long length)",
                "name": "newMessagePart",
                "callSignature": "newMessagePart(mimeType, stream, length)",
                "comment": "Creates a MessagePart with the given MIME type and data with size `length` from the given\nInputStream.",
                "returns": {
                  "type": "MessagePart"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "mimeType",
                    "description": "A MIME type identifying the type of data contained in the given data object.",
                    "type": "String"
                  },
                  {
                    "name": "stream",
                    "description": "InputStream to read data from.",
                    "type": "InputStream"
                  },
                  {
                    "name": "length",
                    "description": "Bytes of data to read from the InputStream.",
                    "type": "long"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.MessagePart newMessagePart(java.lang.String plainText)",
                "name": "newMessagePart",
                "callSignature": "newMessagePart(plainText)",
                "comment": "Creates a MessagePart with a string of text, encoded into a byte array in UTF-8 format.\n\nThis is a convenience accessor encapsulating the common operation of creating a message part\nwith a plain text data attachment in UTF-8 encoding. It is functionally equivalent to the\nfollowing example code:\n\nMessagePart(\"text/plain\", text.getBytes(\"UTF-8\"));",
                "returns": {
                  "description": "A new message part with the MIME Type text/plain and a UTF-8 encoded representation\nof the given input text.",
                  "type": "MessagePart"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "plainText",
                    "description": "The plain text body of the new message part.",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List getMessageIds(com.layer.sdk.messaging.Conversation conversation)",
                "name": "getMessageIds",
                "callSignature": "getMessageIds(conversation)",
                "comment": "Returns an ordered list of IDs for Messages within a given Conversation.  Message objects can\nthen be loaded by ID with either the getMessage(id) or getMessages(ids) methods.  This\nimplements a lazy loading mechanism, useful in applications like an Adapter for a ListView of\na Conversation's Messages.  The Adapter can be made dynamic by implementing a\nLayerChangeEventListener interface and handling INSERT, UPDATE, and DELETE events.  The\nreturned list's order attempts to preserve a natural conversational ordering of Messages,\nallowing this list to directly drive a Conversation's list of Messages in typical chat\napplications.  Ordering is generated using a sequence-based algorithm rather than timestamps.",
                "returns": {
                  "description": "the list of Message IDs within a Conversation, in conversational order.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "conversation",
                    "description": "the Conversation for which to retrieve Message IDs.",
                    "type": "Conversation"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.messaging.Message getMessage(android.net.Uri id)",
                "name": "getMessage",
                "callSignature": "getMessage(id)",
                "comment": "Returns a Message with the given ID, or `null` if no such Message is found.",
                "returns": {
                  "description": "the Message with the given ID, or `null` if no such Message is found.",
                  "type": "Message"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "id",
                    "description": "the unique ID of the Message to return.",
                    "type": "android.net.Uri"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List getMessages(java.util.List ids)",
                "name": "getMessages",
                "callSignature": "getMessages(ids)",
                "comment": "Returns a list of Messages with the given IDs, or an empty list of none are found.",
                "returns": {
                  "description": "a list of Messages with the given IDs, or an empty list of none are found.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "ids",
                    "description": "the unique IDs of the Messages to return, or an empty list if none are found.",
                    "type": "List"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.util.List getMessages(android.net.Uri... ids)",
                "name": "getMessages",
                "callSignature": "getMessages(ids)",
                "comment": null,
                "returns": {
                  "type": "List"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "ids",
                    "type": "android.net.Uri"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List getMessages(com.layer.sdk.messaging.Conversation conversation)",
                "name": "getMessages",
                "callSignature": "getMessages(conversation)",
                "comment": "Returns an ordered list of Messages within a given Conversation, in conversational order.\nTo preserve memory and enable a more responsive user experience, consider using a combination\nof getMessageIds() and one of the get-by-ID methods instead.",
                "returns": {
                  "description": "an ordered list of all Messages in the given Conversation.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "conversation",
                    "description": "the Conversation for which to retrieve Message IDs.",
                    "type": "Conversation"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient registerProgressListener(com.layer.sdk.messaging.MessagePart messagePart, com.layer.sdk.listeners.LayerProgressListener listener)",
                "name": "registerProgressListener",
                "callSignature": "registerProgressListener(messagePart, listener)",
                "comment": "Registers a LayerProgressListener to receive progress notifications for the given\nMessagePart, or all MessageParts if the given MessagePart is `null`.\n\nNote: use LayerProgressListener.WeakReference if you do not intend to unregister the listener\nfrom the LayerClient and want the listener to get garbage collected when external references\ngo away.",
                "returns": {
                  "description": "This LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "messagePart",
                    "description": "The MessagePart to receive progress updates for, or `null` to reveive\n                   updates for all MessageParts.",
                    "type": "MessagePart"
                  },
                  {
                    "name": "listener",
                    "description": "The listener to register for progress updates.",
                    "type": "LayerProgressListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient unregisterProgressListener(com.layer.sdk.messaging.MessagePart messagePart, com.layer.sdk.listeners.LayerProgressListener listener)",
                "name": "unregisterProgressListener",
                "callSignature": "unregisterProgressListener(messagePart, listener)",
                "comment": null,
                "returns": {
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "messagePart",
                    "type": "MessagePart"
                  },
                  {
                    "name": "listener",
                    "type": "LayerProgressListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.query.Queryable get(android.net.Uri id)",
                "name": "get",
                "callSignature": "get(id)",
                "comment": "Loads a Queryable object (Conversation or Message) by ID.",
                "returns": {
                  "description": "The Queryable object, or null if no object could be found.",
                  "type": "Queryable"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "id",
                    "description": "Queryable object ID.",
                    "type": "android.net.Uri"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List executeQuery(com.layer.sdk.query.Query query, com.layer.sdk.query.Query.ResultType resultType)",
                "name": "executeQuery",
                "callSignature": "executeQuery(query, resultType)",
                "comment": "Executes the given Query for the given ResultType.  Results must be cast to their respective\ntypes; IDs to a list of Uris, Objects to a list of Messages or Conversations, and Count to a\nlist of Longs.  For type-safe queries, use executeQueryForIds, executeQueryForObjects, or\nexecuteQueryForCount.",
                "returns": {
                  "description": "The results of executing the provided Query for the provided ResultType.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "query",
                    "description": "Query to execute.",
                    "type": "Query"
                  },
                  {
                    "name": "resultType",
                    "description": "Type of results to return.",
                    "type": "ResultType"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List executeQueryForIds(com.layer.sdk.query.Query query)",
                "name": "executeQueryForIds",
                "callSignature": "executeQueryForIds(query)",
                "comment": "Executes the given Query, returning a list of object IDs.  Use get(id) to lazily load the\nidentified object.",
                "returns": {
                  "description": "List of object IDs returned from executing the Query.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "query",
                    "description": "Query to execute.",
                    "type": "Query"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List executeQueryForObjects(com.layer.sdk.query.Query query)",
                "name": "executeQueryForObjects",
                "callSignature": "executeQueryForObjects(query)",
                "comment": "Executes the given Query, returning a list of objects (Conversations or Messages).",
                "returns": {
                  "description": "List of objects returned from executing the Query.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "query",
                    "description": "Query to execute.",
                    "type": "Query"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.lang.Long executeQueryForCount(com.layer.sdk.query.Query query)",
                "name": "executeQueryForCount",
                "callSignature": "executeQueryForCount(query)",
                "comment": "Example for count of unread messages across all conversations:\nLayerClient.executeQueryForCount(Query.builder(Message.class)\n.predicate(new Predicate(Message.Property.IS_UNREAD, Predicate.Operator.EQUAL_TO, true))\n.build());\n\nExample for count of unread messages for a given conversation:\nLayerClient.executeQueryForCount(Query.builder(Message.class)\n.predicate(new CompoundPredicate(CompoundPredicate.Type.AND,\nnew Predicate(Message.Property.IS_UNREAD, Predicate.Operator.EQUAL_TO, true),\nnew Predicate(Message.Property.CONVERSATION, Predicate.Operator.EQUAL_TO, conversation)))\n.build())\n\nExample for count of conversations with unread messages:\nLayerClient.executeQueryForCount(Query.builder(Conversation.class)\n.predicate(new Predicate(Conversation.Property.HAS_UNREAD_MESSAGES, Predicate.Operator.EQUAL_TO, true))\n.build())",
                "returns": {
                  "description": "",
                  "type": "Long"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "query",
                    "description": "",
                    "type": "Query"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.query.RecyclerViewController newRecyclerViewController(com.layer.sdk.query.Query query, java.util.Collection updateableProperties, com.layer.sdk.query.RecyclerViewController.Callback callback)",
                "name": "newRecyclerViewController",
                "callSignature": "newRecyclerViewController(query, updateableProperties, callback)",
                "comment": "Returns a new RecyclerViewController instance.  RecyclerViewController is used to drive a\nRecyclerView.Adapter from a Query.  This controller automatically generates callbacks for\nnotifying UI updates.",
                "returns": {
                  "description": "RecyclerViewController ready for notifying a RecyclerView.Adapter.",
                  "type": "RecyclerViewController"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "query",
                    "description": "The Query to execute for elements and updates.",
                    "type": "Query"
                  },
                  {
                    "name": "updateableProperties",
                    "description": "An optional set of properties to listen for.  If null, all\n                            property updates are considered for UI content updates.  If not\n                            null, then only content updates matching a provided property are\n                            notified as content updates.",
                    "type": "Collection"
                  },
                  {
                    "name": "callback",
                    "description": "Callback to notify structural and content updates.",
                    "type": "Callback"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.query.ListViewController newListViewController(com.layer.sdk.query.Query query, java.util.Collection updateableProperties, com.layer.sdk.query.ListViewController.Callback callback)",
                "name": "newListViewController",
                "callSignature": "newListViewController(query, updateableProperties, callback)",
                "comment": "Returns a new ListViewController instance.  ListViewController is used to drive a ListAdapter\nfrom a Query.  This controller automatically generates callbacks for notifying UI updates.",
                "returns": {
                  "description": "ListViewController ready to drive a ListView.",
                  "type": "ListViewController"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "query",
                    "description": "The Query to execute for elements and updates.",
                    "type": "Query"
                  },
                  {
                    "name": "updateableProperties",
                    "description": "An optional set of properties to listen for.  If null, all\n                            property updates are considered for UI content updates.  If not\n                            null, then only content updates matching a provided property are\n                            notified as content updates.",
                    "type": "Collection"
                  },
                  {
                    "name": "callback",
                    "type": "Callback"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient registerEventListener(com.layer.sdk.listeners.LayerChangeEventListener listener)",
                "name": "registerEventListener",
                "callSignature": "registerEventListener(listener)",
                "comment": "Registers a LayerChangeEventListener for observing change events.  Change events are emitted\nfor insertion, update, and deletion of Conversation and Message objects.  This allows a\nlistener to dynamically synchronize UI elements in the main thread or an external search\nindex in a background thread, for example.  Each emitted event contains a reference to the\ntarget object.  Updates also contain the updated attribute, along with its old and new value.\n\nNote: use LayerChangeEventListener.WeakReference if you do not intend to unregister the\nlistener from the LayerClient and want the listener to get garbage collected when external\nreferences go away.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerChangeEventListener to register.",
                    "type": "LayerChangeEventListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient unregisterEventListener(com.layer.sdk.listeners.LayerChangeEventListener listener)",
                "name": "unregisterEventListener",
                "callSignature": "unregisterEventListener(listener)",
                "comment": "Stops a LayerChangeEventListener from listening for change events.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerChangeEventListener to unregister.",
                    "type": "LayerChangeEventListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.lang.String getAuthenticatedUserId()",
                "name": "getAuthenticatedUserId",
                "callSignature": "getAuthenticatedUserId()",
                "comment": "",
                "returns": {
                  "description": "the ID for the current authenticated user, or `null` if not authenticated with Layer.",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean isAuthenticated()",
                "name": "isAuthenticated",
                "callSignature": "isAuthenticated()",
                "comment": "Returns `true` if the LayerClient has an authenticated session.",
                "returns": {
                  "description": "`true` if the LayerClient has an authenticated session.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient authenticate()",
                "name": "authenticate",
                "callSignature": "authenticate()",
                "comment": "Tells the client to begin authenticating with current credentials, if they exist.  If no\ncredentials exist, or the credentials are no longer valid, Layer will respond with a `nonce`\nchallenge provided to the LayerAuthenticationListener.onAuthenticationChallenge() listener\nmethod. Respond to the challenge with LayerClient.answerAuthenticationChallenge(), providing\nyour externally-generated `identity token` (see the getting started guide).  You must have\nconnected with a call to connect() prior to authenticating.",
                "returns": {
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient deauthenticate()",
                "name": "deauthenticate",
                "callSignature": "deauthenticate()",
                "comment": "Tells the client to drop all credentials and deauthenticate its session.  On success, also\nclears any local data synchronized with Layer (i.e., defaults to DeauthenticationAction.CLEAR_LOCAL_DATA).",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient deauthenticate(com.layer.sdk.LayerClient.DeauthenticationAction action)",
                "name": "deauthenticate",
                "callSignature": "deauthenticate(action)",
                "comment": "Tells the client to drop all credentials and deauthenticate its session. On success, if needed,\nclears any local data synchronized with Layer based on specified DeauthenticationAction.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "action",
                    "description": "the DeauthenticationAction to use.",
                    "type": "DeauthenticationAction"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void answerAuthenticationChallenge(java.lang.String identityToken)",
                "name": "answerAuthenticationChallenge",
                "callSignature": "answerAuthenticationChallenge(identityToken)",
                "comment": "Responds to a challenge from LayerAuthenticationListener.onAuthenticationChallenge().\nChallenges may come at other times besides the authentication process initialized by a call\nto `authenticate()`.  You must be ready to generate `identity tokens` in the background -\nvia an authenticated session with your backend or similar - to maintain an uninterrupted user\nexperience.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "identityToken",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient registerAuthenticationListener(com.layer.sdk.listeners.LayerAuthenticationListener listener)",
                "name": "registerAuthenticationListener",
                "callSignature": "registerAuthenticationListener(listener)",
                "comment": "Registers a LayerAuthenticationListener for observing authentication callbacks.\nAuthentication callbacks allow a listener to monitor authentication state and to respond to\nauthentication challenges.  This listener is required to complete authentication: the `nonce`\nprovided in onAuthenticationChallenge() must be used to generate the challenge's response, in\nthe form of an `identity token` provided to the LayerClient.answerAuthenticationChallenge()\nmethod.\n\nNote: use LayerAuthenticationListener.WeakReference if you do not intend to unregister the\nlistener from the LayerClient and want the listener to get garbage collected when external\nreferences go away.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerAuthenticationListener to register.",
                    "type": "LayerAuthenticationListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient unregisterAuthenticationListener(com.layer.sdk.listeners.LayerAuthenticationListener listener)",
                "name": "unregisterAuthenticationListener",
                "callSignature": "unregisterAuthenticationListener(listener)",
                "comment": "Stops a LayerAuthenticationListener from observing authentication events.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerAuthenticationListener to unregister.",
                    "type": "LayerAuthenticationListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient connect()",
                "name": "connect",
                "callSignature": "connect()",
                "comment": "Tells the client to connect to Layer, resuming a prior session, if it exists.  A prior\nsession exists if a call to getAuthenticatedUserId() returns a non-null value.  If no session\nexists, or the session is no longer valid, the caller must start the authentication process\nwith a call to authenticate().",
                "returns": {
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient disconnect()",
                "name": "disconnect",
                "callSignature": "disconnect()",
                "comment": "Tells the client to disconnect all network connections with Layer.",
                "returns": {
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient registerConnectionListener(com.layer.sdk.listeners.LayerConnectionListener listener)",
                "name": "registerConnectionListener",
                "callSignature": "registerConnectionListener(listener)",
                "comment": "Registers a LayerConnectionListener for observing connection callbacks.  Connection callbacks\nallow a listener to monitor connection state with the Layer Cloud.\n\nNote: use LayerConnectionListener.WeakReference if you do not intend to unregister the\nlistener from the LayerClient and want the listener to get garbage collected when external\nreferences go away.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerConnectionListener to register.",
                    "type": "LayerConnectionListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient unregisterConnectionListener(com.layer.sdk.listeners.LayerConnectionListener listener)",
                "name": "unregisterConnectionListener",
                "callSignature": "unregisterConnectionListener(listener)",
                "comment": "Stops a LayerConnectionListener from observing connection events.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerConnectionListener to unregister.",
                    "type": "LayerConnectionListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean isConnected()",
                "name": "isConnected",
                "callSignature": "isConnected()",
                "comment": "Returns `true` if this LayerClient has a connection to Layer services.  The authentication\nstate can be separately determined with getAuthenticatedUserId().",
                "returns": {
                  "description": "`true` if this LayerClient has a connection to Layer services.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean isConnecting()",
                "name": "isConnecting",
                "callSignature": "isConnecting()",
                "comment": "Returns `true` if this LayerClient is attempting to establish a connection to Layer services.",
                "returns": {
                  "description": "`true` if this LayerClient is attempting to establish a connection to Layer services.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient registerSyncListener(com.layer.sdk.listeners.LayerSyncListener listener)",
                "name": "registerSyncListener",
                "callSignature": "registerSyncListener(listener)",
                "comment": "Registers a LayerSyncListener for observing sync callbacks.  Sync callbacks let a listener\nmonitor the onset and completion of synchronization with the Layer Cloud.\n\nNote: use LayerSyncListener.WeakReference if you do not intend to unregister the listener\nfrom the LayerClient and want the listener to get garbage collected when external references\ngo away.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerSyncListener to register.",
                    "type": "LayerSyncListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient unregisterSyncListener(com.layer.sdk.listeners.LayerSyncListener listener)",
                "name": "unregisterSyncListener",
                "callSignature": "unregisterSyncListener(listener)",
                "comment": "Stops a LayerSyncListener from observing sync events.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerSyncListener to unregister.",
                    "type": "LayerSyncListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient setAutoDownloadSizeThreshold(long bytes)",
                "name": "setAutoDownloadSizeThreshold",
                "callSignature": "setAutoDownloadSizeThreshold(bytes)",
                "comment": "Set the maximum size for which content will be autodownloaded. Larger content\nwill remain pending until until a download is triggered by\n{@link com.layer.sdk.messaging.MessagePart#download(com.layer.sdk.listeners.LayerProgressListener)}.\nThis defaults to 2KB, and lower values are now allowed.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "bytes",
                    "description": "the maximum size of content to be autodownloaded",
                    "type": "long"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract long getAutoDownloadSizeThreshold()",
                "name": "getAutoDownloadSizeThreshold",
                "callSignature": "getAutoDownloadSizeThreshold()",
                "comment": null,
                "returns": {
                  "type": "long"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient setAutoDownloadMimeTypes(java.util.Collection mimeTypes)",
                "name": "setAutoDownloadMimeTypes",
                "callSignature": "setAutoDownloadMimeTypes(mimeTypes)",
                "comment": "Set the MIME types for which content will be autodownloaded, regardless of the size threshold set by\n{@link com.layer.sdk.LayerClient#setAutoDownloadSizeThreshold(long)}. Other content\nwill remain pending until a download is triggered by\n{@link com.layer.sdk.messaging.MessagePart#download(com.layer.sdk.listeners.LayerProgressListener)}.\nThis defaults to a list containing only \"text/plain\".  Setting to null will download everything.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "mimeTypes",
                    "description": "the MIME types to autodownload",
                    "type": "Collection"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.Set getAutoDownloadMimeTypes()",
                "name": "getAutoDownloadMimeTypes",
                "callSignature": "getAutoDownloadMimeTypes()",
                "comment": null,
                "returns": {
                  "type": "Set"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient setDiskCapacity(long bytes)",
                "name": "setDiskCapacity",
                "callSignature": "setDiskCapacity(bytes)",
                "comment": "Set the maximum amount of disk space to be used storing message data.\nA value of zero (the default) means no limit. Utilization may periodically\npeak above the configured `mDiskCapacity` while synchronization or downloads\nare in progress, but will be rebalanced once all operations have completed.",
                "returns": {
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "bytes",
                    "description": "Maximum amount of space to use",
                    "type": "long"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract long getDiskCapacity()",
                "name": "getDiskCapacity",
                "callSignature": "getDiskCapacity()",
                "comment": null,
                "returns": {
                  "type": "long"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract long getDiskUtilization()",
                "name": "getDiskUtilization",
                "callSignature": "getDiskUtilization()",
                "comment": "Return the current amount of disk space being used on message data",
                "returns": {
                  "description": "the current usage",
                  "type": "long"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient registerTypingIndicator(com.layer.sdk.listeners.LayerTypingIndicatorListener listener)",
                "name": "registerTypingIndicator",
                "callSignature": "registerTypingIndicator(listener)",
                "comment": "Registers a LayerTypingIndicatorListener for observing typing indication callbacks.\n\nNote: use LayerTypingIndicatorListener.WeakReference if you do not intend to unregister the\nlistener from the LayerClient and want the listener to get garbage collected when external\nreferences go away.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerTypingIndicatorListener to register.",
                    "type": "LayerTypingIndicatorListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient unregisterTypingIndicator(com.layer.sdk.listeners.LayerTypingIndicatorListener listener)",
                "name": "unregisterTypingIndicator",
                "callSignature": "unregisterTypingIndicator(listener)",
                "comment": "Stops a LayerTypingIndicatorListener from observing typing indication events.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerTypingIndicatorListener to unregister.",
                    "type": "LayerTypingIndicatorListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract android.net.Uri getAppId()",
                "name": "getAppId",
                "callSignature": "getAppId()",
                "comment": "Returns this client's Layer `App ID`.",
                "returns": {
                  "description": "the Layer `App ID`.",
                  "type": "android.net.Uri"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void setGcmRegistrationId(java.lang.String senderId, java.lang.String registrationId)",
                "name": "setGcmRegistrationId",
                "callSignature": "setGcmRegistrationId(senderId, registrationId)",
                "comment": "If your app registers for GCM itself (e.g. because it accepts GCM from multiple senders), you\nshould pass the LayerClient constructor `null` for the GCM sender ID field, and register GCM\nexternally with a comma-separated list of sender IDs as recommended here:\n- http://developer.android.com/google/gcm/adv.html#multi-senders\nAfter obtaining a registration ID, supply the registration ID to the LayerClient with this\nmethod.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "senderId",
                    "type": "String"
                  },
                  {
                    "name": "registrationId",
                    "description": "The GCM registration ID returned by the GCM registration service.",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List getPolicies()",
                "name": "getPolicies",
                "callSignature": "getPolicies()",
                "comment": "Returns the List of `Policy` objects governing the behavior of the client.",
                "returns": {
                  "description": "The List of `Policy` objects governing the behavior of the client.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean validatePolicy(com.layer.sdk.policy.Policy policy)",
                "name": "validatePolicy",
                "callSignature": "validatePolicy(policy)",
                "comment": "Validates the given policy to determine if it represents a valid configuration that can be\nadded to this `LayerClient`.",
                "returns": {
                  "description": "true if the given policy is valid, or false if not.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "policy",
                    "description": "The policy to validate.",
                    "type": "Policy"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean addPolicy(com.layer.sdk.policy.Policy policy)",
                "name": "addPolicy",
                "callSignature": "addPolicy(policy)",
                "comment": "Appends the given `Policy` to the `LayerClient` policy list.",
                "returns": {
                  "description": "true if the `Policy` was added.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "policy",
                    "description": "The policy to be added to the client.",
                    "type": "Policy"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean insertPolicy(com.layer.sdk.policy.Policy policy, int index)",
                "name": "insertPolicy",
                "callSignature": "insertPolicy(policy, index)",
                "comment": "Inserts the given `Policy` to the `LayerClient` policy list at the given index.",
                "returns": {
                  "description": "true if the `Policy` was inserted.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "policy",
                    "description": "The policy to be added to the client.",
                    "type": "Policy"
                  },
                  {
                    "name": "index",
                    "type": "int"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean removePolicy(com.layer.sdk.policy.Policy policy)",
                "name": "removePolicy",
                "callSignature": "removePolicy(policy)",
                "comment": "Removes the given `Policy` from the `LayerClient` policy list.",
                "returns": {
                  "description": "true if the `Policy` was removed.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "policy",
                    "description": "The policy to be removed from the client.",
                    "type": "Policy"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient registerPolicyListener(com.layer.sdk.listeners.LayerPolicyListener listener)",
                "name": "registerPolicyListener",
                "callSignature": "registerPolicyListener(listener)",
                "comment": "Registers a LayerPolicyListener for observing policy updates.\n\nNote: use LayerPolicyListener.WeakReference if you do not intend to unregister the listener\nfrom the LayerClient and want the listener to get garbage collected when external references\ngo away.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerPolicyListener to register.",
                    "type": "LayerPolicyListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient unregisterPolicyListener(com.layer.sdk.listeners.LayerPolicyListener listener)",
                "name": "unregisterPolicyListener",
                "callSignature": "unregisterPolicyListener(listener)",
                "comment": "Stops a LayerPolicyListener from observing policy updates.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerPolicyListener to unregister.",
                    "type": "LayerPolicyListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient registerObjectExceptionListener(com.layer.sdk.listeners.LayerObjectExceptionListener listener)",
                "name": "registerObjectExceptionListener",
                "callSignature": "registerObjectExceptionListener(listener)",
                "comment": "Registers a LayerObjectExceptionListener to receive callbacks when a Conversation, Message,\nor MessagePart fails to perform a requested action in a background thread.  These errors are\nrare (e.g. a database closed exception when sending a message during deauthentication), but\nif no listener is registered, the exception will be thrown.  If such cases require special\nhandling, such as alerting the user that their message was not sent, the LayerObject that\ncaused the exception can be retrieved from LayerObjectException.getLayerObject().\n\nNote: use LayerObjectExceptionListener.WeakReference if you do not intend to unregister the\nlistener from the LayerClient and want the listener to get garbage collected when external\nreferences go away.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerObjectExceptionListener to register.",
                    "type": "LayerObjectExceptionListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.LayerClient unregisterObjectExceptionListener(com.layer.sdk.listeners.LayerObjectExceptionListener listener)",
                "name": "unregisterObjectExceptionListener",
                "callSignature": "unregisterObjectExceptionListener(listener)",
                "comment": "Stops a LayerObjectExceptionListener from receiving callbacks.",
                "returns": {
                  "description": "this LayerClient.",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "the LayerObjectExceptionListener to unregister.",
                    "type": "LayerObjectExceptionListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void waitForContent(android.net.Uri id, com.layer.sdk.LayerClient.ContentAvailableCallback callback)",
                "name": "waitForContent",
                "callSignature": "waitForContent(id, callback)",
                "comment": "Asynchronously waits for the LayerClient to synchronize relevant data before calling the\ngiven callback. This will wait a maximum of 30 seconds before signaling failure in the\ncallback.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "id",
                    "description": "Queryable object ID to wait for (Conversation, Message, MessagePart, etc).",
                    "type": "android.net.Uri"
                  },
                  {
                    "name": "callback",
                    "description": "ContentAvailableCallback to alert success or failure.",
                    "type": "ContentAvailableCallback"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void waitForContent(android.net.Uri id, long timeout, com.layer.sdk.LayerClient.ContentAvailableCallback callback)",
                "name": "waitForContent",
                "callSignature": "waitForContent(id, timeout, callback)",
                "comment": "Asynchronously waits for the LayerClient to synchronize relevant data before calling the\ngiven callback. This will wait the specified time before signaling failure in the callback.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "id",
                    "description": "Queryable object ID to wait for (Conversation, Message, MessagePart, etc).",
                    "type": "android.net.Uri"
                  },
                  {
                    "name": "timeout",
                    "description": "Maximum duration, in milliseconds, before signaling failure. Must be greater than 0.",
                    "type": "long"
                  },
                  {
                    "name": "callback",
                    "description": "ContentAvailableCallback to alert success or failure.",
                    "type": "ContentAvailableCallback"
                  }
                ],
                "exceptions": []
              }
            ]
          },
          "name": "LayerClient",
          "comment": null,
          "nestedClasses": [
            {
              "implementedInterfaces": [],
              "generics": [
                "T"
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "void onContentAvailable(com.layer.sdk.LayerClient client, com.layer.sdk.query.Queryable object)",
                    "name": "onContentAvailable",
                    "callSignature": "onContentAvailable(client, object)",
                    "comment": "Called when the content has been synchronized and exists in local persistence.",
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "client",
                        "description": "LayerClient that requested the content.",
                        "type": "LayerClient"
                      },
                      {
                        "name": "object",
                        "description": "The Queryable object.",
                        "type": "Queryable"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "void onContentFailed(com.layer.sdk.LayerClient client, android.net.Uri objectId, java.lang.Exception exception)",
                    "name": "onContentFailed",
                    "callSignature": "onContentFailed(client, objectId, exception)",
                    "comment": "Called when the content could not be found before the timeout was reached.",
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "client",
                        "description": "LayerClient that requested the content.",
                        "type": "LayerClient"
                      },
                      {
                        "name": "objectId",
                        "description": "The ID of the object that was requested.",
                        "type": "android.net.Uri"
                      },
                      {
                        "name": "exception",
                        "description": "A Exception describing why this wait failed. This can be\n                 an {@link IllegalStateException} if the LayerClient has been closed or\n                 a {@link LayerException} if the wait has timed out.",
                        "type": "Exception"
                      }
                    ],
                    "exceptions": []
                  }
                ]
              },
              "name": "ContentAvailableCallback",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.LayerClient$ContentAvailableCallback",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "Serializable",
                  "comment": null,
                  "fullname": "java.io.Serializable"
                },
                {
                  "name": "Cloneable",
                  "comment": null,
                  "fullname": "java.lang.Cloneable"
                }
              ],
              "generics": [
                "T"
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "public com.layer.sdk.LayerClient.Options skipConfigurationCheck(boolean skipConfigurationCheck)",
                    "name": "skipConfigurationCheck",
                    "callSignature": "skipConfigurationCheck(skipConfigurationCheck)",
                    "comment": "Enables and disables the LayerClient configuration checks printed out to logcat.",
                    "returns": {
                      "type": "Options"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "skipConfigurationCheck",
                        "description": "- do not perform configuration check",
                        "type": "boolean"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isConfigurationCheckSkipped()",
                    "name": "isConfigurationCheckSkipped",
                    "callSignature": "isConfigurationCheckSkipped()",
                    "comment": "",
                    "returns": {
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.LayerClient.Options broadcastPushInForeground(boolean broadcastPushForeground)",
                    "name": "broadcastPushInForeground",
                    "callSignature": "broadcastPushInForeground(broadcastPushForeground)",
                    "comment": "Tells the LayerClient to broadcast PUSH intents even while the app is in the foreground.",
                    "returns": {
                      "type": "Options"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "broadcastPushForeground",
                        "description": "boolean specifying whether to broadcast PUSH intents in\n                               the foreground and background (true), or only in the\n                               background (false).",
                        "type": "boolean"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isBroadcastPushInForeground()",
                    "name": "isBroadcastPushInForeground",
                    "callSignature": "isBroadcastPushInForeground()",
                    "comment": null,
                    "returns": {
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.LayerClient.Options googleCloudMessagingSenderId(java.lang.String gcmSenderId)",
                    "name": "googleCloudMessagingSenderId",
                    "callSignature": "googleCloudMessagingSenderId(gcmSenderId)",
                    "comment": "Supply a GCM sender ID if you would like the LayerClient to handle GCM registration for\nyou.  Otherwise, use setGcmRegistrationId(senderId, registrationId).  The latter is\nuseful if you would like your app to receive GCM from multiple senders.",
                    "returns": {
                      "type": "Options"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "gcmSenderId",
                        "description": "- Google Cloud Messaging `Sender ID` for receiving GCM pushes.",
                        "type": "String"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public java.lang.String getGoogleCloudMessagingSenderId()",
                    "name": "getGoogleCloudMessagingSenderId",
                    "callSignature": "getGoogleCloudMessagingSenderId()",
                    "comment": null,
                    "returns": {
                      "type": "String"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.LayerClient.Options autoDownloadMimeTypes(java.util.Collection mimeTypes)",
                    "name": "autoDownloadMimeTypes",
                    "callSignature": "autoDownloadMimeTypes(mimeTypes)",
                    "comment": "Set the MIME types for which content will be autodownloaded, regardless of the size threshold set by\n{@link com.layer.sdk.LayerClient.Options#autoDownloadSizeThreshold(long)}. Other content\nwill remain pending until a download is triggered by\n{@link com.layer.sdk.messaging.MessagePart#download(com.layer.sdk.listeners.LayerProgressListener)}.\nThis defaults to a list containing only \"text/plain\".  Setting to null will download everything.",
                    "returns": {
                      "description": "this LayerClient.",
                      "type": "Options"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "mimeTypes",
                        "description": "the MIME types to autodownload",
                        "type": "Collection"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public java.util.Collection getAutoDownloadMimeTypes()",
                    "name": "getAutoDownloadMimeTypes",
                    "callSignature": "getAutoDownloadMimeTypes()",
                    "comment": null,
                    "returns": {
                      "type": "Collection"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.LayerClient.Options autoDownloadSizeThreshold(long thresholdInBytes)",
                    "name": "autoDownloadSizeThreshold",
                    "callSignature": "autoDownloadSizeThreshold(thresholdInBytes)",
                    "comment": "Set the maximum size for which content will be autodownloaded. Larger content\nwill remain pending until until a download is triggered by\n{@link com.layer.sdk.messaging.MessagePart#download(com.layer.sdk.listeners.LayerProgressListener)}.\nThis defaults to 2KB, and lower values are now allowed.",
                    "returns": {
                      "description": "this LayerClient.",
                      "type": "Options"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "thresholdInBytes",
                        "description": "the maximum size of content to be autodownloaded",
                        "type": "long"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public long getAutoDownloadSizeThreshold()",
                    "name": "getAutoDownloadSizeThreshold",
                    "callSignature": "getAutoDownloadSizeThreshold()",
                    "comment": null,
                    "returns": {
                      "type": "long"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.LayerClient.Options diskCapacity(long capacityInBytes)",
                    "name": "diskCapacity",
                    "callSignature": "diskCapacity(capacityInBytes)",
                    "comment": "Set the maximum amount of disk space to be used storing message data.\nA value of zero (the default) means no limit. Utilization may periodically\npeak above the configured `mDiskCapacity` while synchronization or downloads\nare in progress, but will be rebalanced once all operations have completed.",
                    "returns": {
                      "type": "Options"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "capacityInBytes",
                        "description": "Maximum amount of space to use",
                        "type": "long"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public long getDiskCapacity()",
                    "name": "getDiskCapacity",
                    "callSignature": "getDiskCapacity()",
                    "comment": null,
                    "returns": {
                      "type": "long"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.LayerClient.Options historicSyncPolicy(com.layer.sdk.LayerClient.Options.HistoricSyncPolicy historicSyncPolicy)",
                    "name": "historicSyncPolicy",
                    "callSignature": "historicSyncPolicy(historicSyncPolicy)",
                    "comment": "Sets the synchronization strategy the LayerClient uses when first authenticated.  Users\ncan have existing Message history from previous sessions prior to logging out on this\ndevice, sessions on different devices, or content sent to them before their first login,\nso the LayerClient presents a number of synchronization options for bringing that user's\nmessage history from the Layer cloud onto the local device efficiently.\n\nIf an option besides `ALL_MESSAGES` is used, more history can be retrieved for a\nConversation by calling a `sync` method, such as `syncMoreHistoricMessages(int)`.\n\nTo monitory historic synchronization progress, register a LayerSyncListener and handle\nits `onSyncProgress()` method.",
                    "returns": {
                      "type": "Options"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "historicSyncPolicy",
                        "type": "HistoricSyncPolicy"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.LayerClient.Options.HistoricSyncPolicy getHistoricSyncPolicy()",
                    "name": "getHistoricSyncPolicy",
                    "callSignature": "getHistoricSyncPolicy()",
                    "comment": null,
                    "returns": {
                      "type": "HistoricSyncPolicy"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.LayerClient.Options customEndpoint(java.lang.String confUrl, java.lang.String certUrl, java.lang.String authUrl, java.lang.String syncUrl)",
                    "name": "customEndpoint",
                    "callSignature": "customEndpoint(confUrl, certUrl, authUrl, syncUrl)",
                    "comment": "Sets a custom set of endpoints to use by the LayerClient.  Ask support@layer.com if you\nare interested in custom endpoints.",
                    "returns": {
                      "type": "Options"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "confUrl",
                        "type": "String"
                      },
                      {
                        "name": "certUrl",
                        "type": "String"
                      },
                      {
                        "name": "authUrl",
                        "type": "String"
                      },
                      {
                        "name": "syncUrl",
                        "type": "String"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public java.lang.String getCustomEndpointConf()",
                    "name": "getCustomEndpointConf",
                    "callSignature": "getCustomEndpointConf()",
                    "comment": null,
                    "returns": {
                      "type": "String"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public java.lang.String getCustomEndpointCert()",
                    "name": "getCustomEndpointCert",
                    "callSignature": "getCustomEndpointCert()",
                    "comment": null,
                    "returns": {
                      "type": "String"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public java.lang.String getCustomEndpointAuth()",
                    "name": "getCustomEndpointAuth",
                    "callSignature": "getCustomEndpointAuth()",
                    "comment": null,
                    "returns": {
                      "type": "String"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public java.lang.String getCustomEndpointSync()",
                    "name": "getCustomEndpointSync",
                    "callSignature": "getCustomEndpointSync()",
                    "comment": null,
                    "returns": {
                      "type": "String"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isCustomEndpointSet()",
                    "name": "isCustomEndpointSet",
                    "callSignature": "isCustomEndpointSet()",
                    "comment": null,
                    "returns": {
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.LayerClient.Options clone()",
                    "name": "clone",
                    "callSignature": "clone()",
                    "comment": null,
                    "returns": {
                      "type": "Options"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public java.lang.String toString()",
                    "name": "toString",
                    "callSignature": "toString()",
                    "comment": null,
                    "returns": {
                      "type": "String"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "Options",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.LayerClient$Options",
              "enumClasses": [
                {
                  "implementedInterfaces": [],
                  "methods": {
                    "constructor": [],
                    "static": [],
                    "instance": []
                  },
                  "name": "HistoricSyncPolicy",
                  "comment": "HistoricSyncPolicy defines the amount of message history the LayerClient initially\nsynchronizes for the authenticated user when the user first authenticates.  By default,\nthe LayerClient only synchronizes messages starting from the earliest unread Message up\nto the last Message in each of the authenticated user's Conversations.\n\nTo monitory historic synchronization progress, register a LayerSyncListener and handle\nits `onSyncProgress()` method.\n\nNOTE: ALL_MESSAGES fetches all history and may adversely affect performance during\nsynchronization if the user has a large amount of past history to synchronize.",
                  "nestedClasses": [],
                  "fullname": "com.layer.sdk.LayerClient$Options$HistoricSyncPolicy",
                  "enumClasses": [],
                  "fields": [
                    {
                      "name": "ALL_MESSAGES",
                      "comment": "Synchronize all Messages",
                      "type": "HistoricSyncPolicy"
                    },
                    {
                      "name": "FROM_EARLIEST_UNREAD_MESSAGE",
                      "comment": "Synchronize Messages from the earliest unread Message up to the present",
                      "type": "HistoricSyncPolicy"
                    },
                    {
                      "name": "FROM_LAST_MESSAGE",
                      "comment": "Synchronize only the last Message",
                      "type": "HistoricSyncPolicy"
                    }
                  ],
                  "derivedClasses": []
                }
              ],
              "fields": [],
              "derivedClasses": []
            }
          ],
          "fullname": "com.layer.sdk.LayerClient",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "DeletionMode",
              "comment": "DeletionMode specifies the form of deletion to apply when deleting a Conversation or Message.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.LayerClient$DeletionMode",
              "enumClasses": [],
              "fields": [
                {
                  "name": "ALL_MY_DEVICES",
                  "comment": "Deletes this LayerObject for current user across all his devices.",
                  "type": "DeletionMode"
                },
                {
                  "name": "ALL_PARTICIPANTS",
                  "comment": "Deletes this LayerObject from all participant devices.",
                  "type": "DeletionMode"
                }
              ],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "DeauthenticationAction",
              "comment": "Actions for the LayerClient to take on deauthentication.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.LayerClient$DeauthenticationAction",
              "enumClasses": [],
              "fields": [
                {
                  "name": "INVALID",
                  "comment": "Invalid",
                  "type": "DeauthenticationAction"
                },
                {
                  "name": "KEEP_LOCAL_DATA",
                  "comment": "Keeps this user's local data for resuming when they authenticate again.",
                  "type": "DeauthenticationAction"
                },
                {
                  "name": "CLEAR_LOCAL_DATA",
                  "comment": "Clears this user's local data, requiring synchronization when they authenticate again.",
                  "type": "DeauthenticationAction"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": []
        }
      ],
      "name": "com.layer.sdk"
    },
    {
      "classes": [
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [
              {
                "declarationSignature": "public LayerChangeEvent(com.layer.sdk.LayerClient client, java.util.List changes)",
                "name": "LayerChangeEvent",
                "callSignature": "LayerChangeEvent(client, changes)",
                "comment": null,
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "type": "LayerClient"
                  },
                  {
                    "name": "changes",
                    "type": "List"
                  }
                ],
                "exceptions": []
              }
            ],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.LayerClient getClient()",
                "name": "getClient",
                "callSignature": "getClient()",
                "comment": "Returns the LayerClient that generated this LayerChangeEvent.",
                "returns": {
                  "description": "The LayerClient that generated this LayerChangeEvent",
                  "type": "LayerClient"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.util.List getChanges()",
                "name": "getChanges",
                "callSignature": "getChanges()",
                "comment": "Returns the list of Changes represented by this LayerChangeEvent.",
                "returns": {
                  "description": "The list of Changes represented by this LayerChangeEvent",
                  "type": "List"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "LayerChangeEvent",
          "comment": "A LayerChangeEvent represents a list of Changes during foreground public API usage or background\nsynchronization.  These Changes can be used to synchronize UI state or an index within external\nstorage with dynamic Layer Conversation and Message object mutations.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.changes.LayerChangeEvent",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [
              {
                "declarationSignature": "public LayerChange(com.layer.sdk.changes.LayerChange.Type changeType, com.layer.sdk.messaging.LayerObject object, java.lang.String attributeName, java.lang.Object oldValue, java.lang.Object newValue)",
                "name": "LayerChange",
                "callSignature": "LayerChange(changeType, object, attributeName, oldValue, newValue)",
                "comment": null,
                "throws": [],
                "parameters": [
                  {
                    "name": "changeType",
                    "type": "Type"
                  },
                  {
                    "name": "object",
                    "type": "LayerObject"
                  },
                  {
                    "name": "attributeName",
                    "type": "String"
                  },
                  {
                    "name": "oldValue",
                    "type": "Object"
                  },
                  {
                    "name": "newValue",
                    "type": "Object"
                  }
                ],
                "exceptions": []
              }
            ],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.messaging.LayerObject.Type getObjectType()",
                "name": "getObjectType",
                "callSignature": "getObjectType()",
                "comment": "Returns the LayerObject.Type associated with this event.",
                "returns": {
                  "description": "The LayerObject.Type associated with this event.",
                  "type": "Type"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.changes.LayerChange.Type getChangeType()",
                "name": "getChangeType",
                "callSignature": "getChangeType()",
                "comment": "Returns the LayerChange.Type associated with this event.",
                "returns": {
                  "description": "The LayerChange.Type associated with this event.",
                  "type": "Type"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.LayerObject getObject()",
                "name": "getObject",
                "callSignature": "getObject()",
                "comment": "Returns the object associated with this event (Message or Conversation).",
                "returns": {
                  "description": "The object associated with this event (Message or Conversation).",
                  "type": "LayerObject"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String getAttributeName()",
                "name": "getAttributeName",
                "callSignature": "getAttributeName()",
                "comment": "Returns the name of the updated attribute.  Only valid for Type.UPDATE.\nAttribute names depend on the Type of the LayerObject:\nCONVERSATION\n\"id\"\n\"isDeleted\"\n\"lastMessage\"\n\"metadata\"\n\"participants\"\n\nMESSAGE\n\"id\"\n\"isSent\"\n\"isDeleted\"\n\"position\"\n\"receivedAt\"\n\"sentAt\"\n\"recipientStatus\"\n\nMESSAGE_PART\n\"id\"\n\"transferStatus\"\n\"isPruned\"",
                "returns": {
                  "description": "The name of the updated attribute.",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.Object getOldValue()",
                "name": "getOldValue",
                "callSignature": "getOldValue()",
                "comment": "Returns the previous value of the changed attribute.  Only valid for Type.UPDATE.",
                "returns": {
                  "description": "The previous value of the changed attribute.",
                  "type": "Object"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.Object getNewValue()",
                "name": "getNewValue",
                "callSignature": "getNewValue()",
                "comment": "Returns the new value of the changed attribute.  Only valid for Type.UPDATE.",
                "returns": {
                  "description": "The new value of the changed attribute.",
                  "type": "Object"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String toString()",
                "name": "toString",
                "callSignature": "toString()",
                "comment": null,
                "returns": {
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "LayerChange",
          "comment": "Changes represent INSERT, UPDATE, and DELETE actions applied to Layer Conversation and Message\nobjects.  INSERT and DELETE types contain a cached object reference to the object that was either\nadded or removed from the Layer persistence.  UPDATE types contain the cached object reference\nalong with a String representation of the attribute that changed, the attribute's old value,\nand the attribute's new value.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.changes.LayerChange",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Type",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.changes.LayerChange$Type",
              "enumClasses": [],
              "fields": [
                {
                  "name": "INSERT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "UPDATE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "DELETE",
                  "comment": null,
                  "type": "Type"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": []
        }
      ],
      "name": "com.layer.sdk.changes"
    },
    {
      "classes": [
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [
              {
                "declarationSignature": "public LayerObjectException(Type type, com.layer.sdk.messaging.LayerObject layerObject, java.lang.String detailMessage, java.lang.Throwable throwable)",
                "name": "LayerObjectException",
                "callSignature": "LayerObjectException(type, layerObject, detailMessage, throwable)",
                "comment": null,
                "throws": [],
                "parameters": [
                  {
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "name": "layerObject",
                    "type": "LayerObject"
                  },
                  {
                    "name": "detailMessage",
                    "type": "String"
                  },
                  {
                    "name": "throwable",
                    "type": "Throwable"
                  }
                ],
                "exceptions": []
              }
            ],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.messaging.LayerObject getLayerObject()",
                "name": "getLayerObject",
                "callSignature": "getLayerObject()",
                "comment": null,
                "returns": {
                  "type": "LayerObject"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String toString()",
                "name": "toString",
                "callSignature": "toString()",
                "comment": null,
                "returns": {
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "LayerObjectException",
          "comment": null,
          "nestedClasses": [],
          "fullname": "com.layer.sdk.exceptions.LayerObjectException",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [
              {
                "declarationSignature": "public LayerException(com.layer.sdk.exceptions.LayerException.Type type)",
                "name": "LayerException",
                "callSignature": "LayerException(type)",
                "comment": null,
                "throws": [],
                "parameters": [
                  {
                    "name": "type",
                    "type": "Type"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public LayerException(com.layer.sdk.exceptions.LayerException.Type type, java.lang.String detailMessage)",
                "name": "LayerException",
                "callSignature": "LayerException(type, detailMessage)",
                "comment": null,
                "throws": [],
                "parameters": [
                  {
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "name": "detailMessage",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public LayerException(com.layer.sdk.exceptions.LayerException.Type type, java.lang.String detailMessage, java.lang.Throwable throwable)",
                "name": "LayerException",
                "callSignature": "LayerException(type, detailMessage, throwable)",
                "comment": null,
                "throws": [],
                "parameters": [
                  {
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "name": "detailMessage",
                    "type": "String"
                  },
                  {
                    "name": "throwable",
                    "type": "Throwable"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public LayerException(com.layer.sdk.exceptions.LayerException.Type type, java.lang.Throwable throwable)",
                "name": "LayerException",
                "callSignature": "LayerException(type, throwable)",
                "comment": null,
                "throws": [],
                "parameters": [
                  {
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "name": "throwable",
                    "type": "Throwable"
                  }
                ],
                "exceptions": []
              }
            ],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.exceptions.LayerException.Type getType()",
                "name": "getType",
                "callSignature": "getType()",
                "comment": null,
                "returns": {
                  "type": "Type"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String toString()",
                "name": "toString",
                "callSignature": "toString()",
                "comment": null,
                "returns": {
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "LayerException",
          "comment": null,
          "nestedClasses": [],
          "fullname": "com.layer.sdk.exceptions.LayerException",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [
                  {
                    "declarationSignature": "Type(int code)",
                    "name": "Type",
                    "callSignature": "Type(code)",
                    "comment": null,
                    "throws": [],
                    "parameters": [
                      {
                        "name": "code",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "static": [
                  {
                    "declarationSignature": "public static com.layer.sdk.exceptions.LayerException.Type fromErrorCode(int errorCode)",
                    "name": "fromErrorCode",
                    "callSignature": "fromErrorCode(errorCode)",
                    "comment": null,
                    "returns": {
                      "type": "Type"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "errorCode",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "instance": [
                  {
                    "declarationSignature": "public int getCode()",
                    "name": "getCode",
                    "callSignature": "getCode()",
                    "comment": null,
                    "returns": {
                      "type": "int"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "Type",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.exceptions.LayerException$Type",
              "enumClasses": [],
              "fields": [
                {
                  "name": "UNSPECIFIED_ERROR",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "REQUEST_TIMEOUT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "INTERNAL_SERVER_ERROR",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "SERVICE_UNAVAILABLE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EVENT_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "MEMBER_ID_REQUIRED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "MEMBER_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "STREAM_DELETED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "STREAM_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "STREAM_SEQ_CONTENTION",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "TARGET_SEQ_REQUIRED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "UNAUTHORIZED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "USER_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "VERSION_INCORRECT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "VERSION_REQUIRED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EVENT_DELETED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "CONFLICT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "INVALID_CONTENT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "CONTENT_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "USER_BLOCKED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "APP_ID_MALFORMED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "APP_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "DEVICE_ID_MALFORMED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "DEVICE_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_CLAIM_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_CLAIM_WRONG_TYPE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_EXPIRED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_HEADER_PARAM_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_HEADER_PARAM_WRONG_TYPE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_HEADER_PARAM_WRONG_VALUE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_KEY_DELETED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_KEY_DISABLED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_KEY_MALFORMED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_KEY_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_MALFORMED_BASE64URL",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_MALFORMED_JSON",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_NONCE_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_NOT_BEFORE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_PROVIDER_NOT_BOUND_TO_APP",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_PROVIDER_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_SIGNATURE_VERIFICATION_FAILED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_USER_BLACKLISTED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "EIT_WRONG_JWS_PART_COUNT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "HTTP_HEADER_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NONCE_LIMIT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "SESSION_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "UNKNOWN",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NOT_AUTHENTICATED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "INVALID_MESSAGE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "TOO_MANY_PARTICIPANTS",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "DATA_LENGTH_EXCEEDS_MAXIMUM",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "MESSAGE_ALREADY_MARKED_AS_READ",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "CONVERSATION_DELETED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "MESSAGE_ALREADY_SENT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "CONVERSATION_IS_NEW",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NO_PARTICIPANTS",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "CONTEXT_MISMATCH",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "UPDATE_WITHOUT_ATTRIBUTE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "CANNOT_UPDATE_ATTRIBUTE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NULL_PARTICIPANTS",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NULL_PARTICIPANT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NULL_MESSAGE_PARTS",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NO_MESSAGE_PARTS",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NULL_MESSAGE_PART",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NULL_MESSAGE_PART_DATA",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "INVALID_METADATA_FORMAT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "MESSAGE_IS_NEW",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "MESSAGE_DELETED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "MARKING_OWN_MESSAGE_READ",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NULL_CONVERSATION",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NOT_UPDATE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "INVALID_MIME_TYPE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "MESSAGE_PART_IS_NEW",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "MESSAGE_PART_TOO_LARGE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "TOO_MANY_MESSAGE_PARTS",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "DISTINCT_CONVERSATION_EXISTS",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "TRANSPORT_ERROR",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "AUTHENTICATION_CHALLENGE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "UNPROCESSABLE_RESPONSE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "TIMED_OUT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "CANNOT_CONNECT_TO_HOST",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NETWORK_CONNECTION_LOST",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "PERSISTENCE_CLOSED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "PERSISTENCE_CREATION_FAILED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "ALREADY_CONNECTED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NOT_CONNECTED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "KEY_PAIR_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "CERTIFICATE_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "IDENTITY_NOT_FOUND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "FAILED_TO_PERSIST_SESSION",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "FAILED_TO_AUTHENTICATE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "ALREADY_AUTHENTICATED",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "DEVICE_TOKEN_INVALID",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "UNDEFINED_SYNC_FAILURE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "DEVICE_PERSISTENCE_FAILURE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "SYNCHRONIZATION_FAILURE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "FAILED_API_ACTION",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "FAILED_CONTENT_OPERATION",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "mCode",
                  "comment": null,
                  "type": "int"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": [
            {
              "name": "LayerObjectException",
              "comment": null,
              "fullname": "com.layer.sdk.exceptions.LayerObjectException"
            },
            {
              "name": "LayerConversationException",
              "comment": null,
              "fullname": "com.layer.sdk.exceptions.LayerConversationException"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [
              {
                "declarationSignature": "public LayerConversationException(Type type, com.layer.sdk.messaging.Conversation conversation, java.lang.String detailMessage)",
                "name": "LayerConversationException",
                "callSignature": "LayerConversationException(type, conversation, detailMessage)",
                "comment": null,
                "throws": [],
                "parameters": [
                  {
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "name": "conversation",
                    "type": "Conversation"
                  },
                  {
                    "name": "detailMessage",
                    "type": "String"
                  }
                ],
                "exceptions": []
              }
            ],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.messaging.Conversation getConversation()",
                "name": "getConversation",
                "callSignature": "getConversation()",
                "comment": null,
                "returns": {
                  "type": "Conversation"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String toString()",
                "name": "toString",
                "callSignature": "toString()",
                "comment": null,
                "returns": {
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "LayerConversationException",
          "comment": null,
          "nestedClasses": [],
          "fullname": "com.layer.sdk.exceptions.LayerConversationException",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": []
        }
      ],
      "name": "com.layer.sdk.exceptions"
    },
    {
      "classes": [
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "void onBeforeSync(com.layer.sdk.LayerClient client, com.layer.sdk.listeners.LayerSyncListener.SyncType syncType)",
                "name": "onBeforeSync",
                "callSignature": "onBeforeSync(client, syncType)",
                "comment": "Alerts the listener to the start of synchronization with the Layer cloud.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "description": "The LayerClient starting to synchronize.",
                    "type": "LayerClient"
                  },
                  {
                    "name": "syncType",
                    "description": "The type of sync that is being performed",
                    "type": "SyncType"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void onSyncProgress(com.layer.sdk.LayerClient client, com.layer.sdk.listeners.LayerSyncListener.SyncType syncType, int progress)",
                "name": "onSyncProgress",
                "callSignature": "onSyncProgress(client, syncType, progress)",
                "comment": "Alerts the listener to progress when synchronizing historic messages after the LayerClient is\nfirst authenticated.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "description": "The LayerClient reporting progress.",
                    "type": "LayerClient"
                  },
                  {
                    "name": "syncType",
                    "description": "The type of sync that is being performed",
                    "type": "SyncType"
                  },
                  {
                    "name": "progress",
                    "description": "An integer value from 0 to 100 representing progress percent.",
                    "type": "int"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void onAfterSync(com.layer.sdk.LayerClient client, com.layer.sdk.listeners.LayerSyncListener.SyncType syncType)",
                "name": "onAfterSync",
                "callSignature": "onAfterSync(client, syncType)",
                "comment": "Alerts the listener to the end of synchronization with the Layer cloud.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "description": "The LayerClient ending to synchronize.",
                    "type": "LayerClient"
                  },
                  {
                    "name": "syncType",
                    "description": "The type of sync that is being performed",
                    "type": "SyncType"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void onSyncError(com.layer.sdk.LayerClient client, java.util.List exceptions)",
                "name": "onSyncError",
                "callSignature": "onSyncError(client, exceptions)",
                "comment": "Alerts the listener to LayerExceptions that occurred during synchronization.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "description": "The LayerClient which ran into an error while synchronizing.",
                    "type": "LayerClient"
                  },
                  {
                    "name": "exceptions",
                    "description": "A list of LayerExceptions thrown during synchronization.",
                    "type": "List"
                  }
                ],
                "exceptions": []
              }
            ]
          },
          "name": "LayerSyncListener",
          "comment": null,
          "nestedClasses": [
            {
              "implementedInterfaces": [
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                },
                {
                  "name": "LayerSyncListener",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerSyncListener"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Weak",
              "comment": "A LayerSyncListener which registers as a WeakReference.  This will be garbage collected\nwithout a stronger external reference.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.listeners.LayerSyncListener$Weak",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread"
                },
                {
                  "name": "LayerSyncListener",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerSyncListener"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "BackgroundThread",
              "comment": null,
              "nestedClasses": [
                {
                  "implementedInterfaces": [
                    {
                      "name": "BackgroundThread",
                      "comment": null,
                      "fullname": "com.layer.sdk.listeners.LayerSyncListener$BackgroundThread"
                    },
                    {
                      "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                      "comment": null,
                      "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                    }
                  ],
                  "methods": {
                    "constructor": [],
                    "static": [],
                    "instance": []
                  },
                  "name": "Weak",
                  "comment": null,
                  "nestedClasses": [],
                  "fullname": "com.layer.sdk.listeners.LayerSyncListener$BackgroundThread$Weak",
                  "enumClasses": [],
                  "fields": [],
                  "derivedClasses": []
                }
              ],
              "fullname": "com.layer.sdk.listeners.LayerSyncListener$BackgroundThread",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": [
                {
                  "name": "Weak",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerSyncListener$BackgroundThread$Weak"
                }
              ]
            }
          ],
          "fullname": "com.layer.sdk.listeners.LayerSyncListener",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "SyncType",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.listeners.LayerSyncListener$SyncType",
              "enumClasses": [],
              "fields": [
                {
                  "name": "HISTORIC",
                  "comment": null,
                  "type": "SyncType"
                },
                {
                  "name": "NORMAL",
                  "comment": null,
                  "type": "SyncType"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": [
            {
              "name": "Weak",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerSyncListener$BackgroundThread$Weak"
            },
            {
              "name": "BackgroundThread",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerSyncListener$BackgroundThread"
            },
            {
              "name": "Weak",
              "comment": "A LayerSyncListener which registers as a WeakReference.  This will be garbage collected\nwithout a stronger external reference.",
              "fullname": "com.layer.sdk.listeners.LayerSyncListener$Weak"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "void onObjectError(com.layer.sdk.LayerClient client, com.layer.sdk.exceptions.LayerObjectException objectException)",
                "name": "onObjectError",
                "callSignature": "onObjectError(client, objectException)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "type": "LayerClient"
                  },
                  {
                    "name": "objectException",
                    "type": "LayerObjectException"
                  }
                ],
                "exceptions": []
              }
            ]
          },
          "name": "LayerObjectExceptionListener",
          "comment": null,
          "nestedClasses": [
            {
              "implementedInterfaces": [
                {
                  "name": "LayerObjectExceptionListener",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerObjectExceptionListener"
                },
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Weak",
              "comment": "A LayerObjectExceptionListener which registers as a WeakReference.  This will be garbage\ncollected without a stronger external reference.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.listeners.LayerObjectExceptionListener$Weak",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread"
                },
                {
                  "name": "LayerObjectExceptionListener",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerObjectExceptionListener"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "BackgroundThread",
              "comment": null,
              "nestedClasses": [
                {
                  "implementedInterfaces": [
                    {
                      "name": "BackgroundThread",
                      "comment": null,
                      "fullname": "com.layer.sdk.listeners.LayerObjectExceptionListener$BackgroundThread"
                    },
                    {
                      "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                      "comment": null,
                      "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                    }
                  ],
                  "methods": {
                    "constructor": [],
                    "static": [],
                    "instance": []
                  },
                  "name": "Weak",
                  "comment": null,
                  "nestedClasses": [],
                  "fullname": "com.layer.sdk.listeners.LayerObjectExceptionListener$BackgroundThread$Weak",
                  "enumClasses": [],
                  "fields": [],
                  "derivedClasses": []
                }
              ],
              "fullname": "com.layer.sdk.listeners.LayerObjectExceptionListener$BackgroundThread",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": [
                {
                  "name": "Weak",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerObjectExceptionListener$BackgroundThread$Weak"
                }
              ]
            }
          ],
          "fullname": "com.layer.sdk.listeners.LayerObjectExceptionListener",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": [
            {
              "name": "BackgroundThread",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerObjectExceptionListener$BackgroundThread"
            },
            {
              "name": "Weak",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerObjectExceptionListener$BackgroundThread$Weak"
            },
            {
              "name": "Weak",
              "comment": "A LayerObjectExceptionListener which registers as a WeakReference.  This will be garbage\ncollected without a stronger external reference.",
              "fullname": "com.layer.sdk.listeners.LayerObjectExceptionListener$Weak"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "void onProgressStart(com.layer.sdk.messaging.MessagePart part, com.layer.sdk.listeners.LayerProgressListener.Operation operation)",
                "name": "onProgressStart",
                "callSignature": "onProgressStart(part, operation)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "part",
                    "type": "MessagePart"
                  },
                  {
                    "name": "operation",
                    "type": "Operation"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void onProgressUpdate(com.layer.sdk.messaging.MessagePart part, com.layer.sdk.listeners.LayerProgressListener.Operation operation, long transferredBytes)",
                "name": "onProgressUpdate",
                "callSignature": "onProgressUpdate(part, operation, transferredBytes)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "part",
                    "type": "MessagePart"
                  },
                  {
                    "name": "operation",
                    "type": "Operation"
                  },
                  {
                    "name": "transferredBytes",
                    "type": "long"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void onProgressComplete(com.layer.sdk.messaging.MessagePart part, com.layer.sdk.listeners.LayerProgressListener.Operation operation)",
                "name": "onProgressComplete",
                "callSignature": "onProgressComplete(part, operation)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "part",
                    "type": "MessagePart"
                  },
                  {
                    "name": "operation",
                    "type": "Operation"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void onProgressError(com.layer.sdk.messaging.MessagePart part, com.layer.sdk.listeners.LayerProgressListener.Operation operation, java.lang.Throwable cause)",
                "name": "onProgressError",
                "callSignature": "onProgressError(part, operation, cause)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "part",
                    "type": "MessagePart"
                  },
                  {
                    "name": "operation",
                    "type": "Operation"
                  },
                  {
                    "name": "cause",
                    "type": "Throwable"
                  }
                ],
                "exceptions": []
              }
            ]
          },
          "name": "LayerProgressListener",
          "comment": "Tracks the progress of a MessagePart upload & download",
          "nestedClasses": [
            {
              "implementedInterfaces": [
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                },
                {
                  "name": "LayerProgressListener",
                  "comment": "Tracks the progress of a MessagePart upload & download",
                  "fullname": "com.layer.sdk.listeners.LayerProgressListener"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Weak",
              "comment": "A LayerProgressListener which registers as a WeakReference.  This will be garbage collected\nwithout a stronger external reference.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.listeners.LayerProgressListener$Weak",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread"
                },
                {
                  "name": "LayerProgressListener",
                  "comment": "Tracks the progress of a MessagePart upload & download",
                  "fullname": "com.layer.sdk.listeners.LayerProgressListener"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "BackgroundThread",
              "comment": null,
              "nestedClasses": [
                {
                  "implementedInterfaces": [
                    {
                      "name": "BackgroundThread",
                      "comment": null,
                      "fullname": "com.layer.sdk.listeners.LayerProgressListener$BackgroundThread"
                    },
                    {
                      "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                      "comment": null,
                      "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                    }
                  ],
                  "methods": {
                    "constructor": [],
                    "static": [],
                    "instance": []
                  },
                  "name": "Weak",
                  "comment": null,
                  "nestedClasses": [],
                  "fullname": "com.layer.sdk.listeners.LayerProgressListener$BackgroundThread$Weak",
                  "enumClasses": [],
                  "fields": [],
                  "derivedClasses": []
                }
              ],
              "fullname": "com.layer.sdk.listeners.LayerProgressListener$BackgroundThread",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": [
                {
                  "name": "Weak",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerProgressListener$BackgroundThread$Weak"
                }
              ]
            }
          ],
          "fullname": "com.layer.sdk.listeners.LayerProgressListener",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Operation",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.listeners.LayerProgressListener$Operation",
              "enumClasses": [],
              "fields": [
                {
                  "name": "UPLOAD",
                  "comment": null,
                  "type": "Operation"
                },
                {
                  "name": "DOWNLOAD",
                  "comment": null,
                  "type": "Operation"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": [
            {
              "name": "Weak",
              "comment": "A LayerProgressListener which registers as a WeakReference.  This will be garbage collected\nwithout a stronger external reference.",
              "fullname": "com.layer.sdk.listeners.LayerProgressListener$Weak"
            },
            {
              "name": "BackgroundThread",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerProgressListener$BackgroundThread"
            },
            {
              "name": "Weak",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerProgressListener$BackgroundThread$Weak"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "void onChangeEvent(com.layer.sdk.changes.LayerChangeEvent event)",
                "name": "onChangeEvent",
                "callSignature": "onChangeEvent(event)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "event",
                    "type": "LayerChangeEvent"
                  }
                ],
                "exceptions": []
              }
            ]
          },
          "name": "LayerChangeEventListener",
          "comment": "LayerChangeEventListeners attach to a LayerClient and receive events when Layer objects change.\nFor example, a Conversation may get inserted, or a Message may get sent or read, or a MessagePart\nmay complete uploading/downloading.  LayerChangeEventListener receives events on the main thread\nby default.  LayerChangeEventListener.BackgroundThread receives events on a background thread.",
          "nestedClasses": [
            {
              "implementedInterfaces": [
                {
                  "name": "LayerChangeEventListener",
                  "comment": "LayerChangeEventListeners attach to a LayerClient and receive events when Layer objects change.\nFor example, a Conversation may get inserted, or a Message may get sent or read, or a MessagePart\nmay complete uploading/downloading.  LayerChangeEventListener receives events on the main thread\nby default.  LayerChangeEventListener.BackgroundThread receives events on a background thread.",
                  "fullname": "com.layer.sdk.listeners.LayerChangeEventListener"
                },
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Weak",
              "comment": "A LayerChangeEventListener.BackgroundThread which registers as a WeakReference.  This\nwill be garbage collected without a stronger external reference.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.listeners.LayerChangeEventListener$Weak",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread"
                },
                {
                  "name": "LayerChangeEventListener",
                  "comment": "LayerChangeEventListeners attach to a LayerClient and receive events when Layer objects change.\nFor example, a Conversation may get inserted, or a Message may get sent or read, or a MessagePart\nmay complete uploading/downloading.  LayerChangeEventListener receives events on the main thread\nby default.  LayerChangeEventListener.BackgroundThread receives events on a background thread.",
                  "fullname": "com.layer.sdk.listeners.LayerChangeEventListener"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "BackgroundThread",
              "comment": "LayerChangeEventListener.BackgroundThread receives LayerChangeEvents on a background thread.",
              "nestedClasses": [
                {
                  "implementedInterfaces": [
                    {
                      "name": "BackgroundThread",
                      "comment": "LayerChangeEventListener.BackgroundThread receives LayerChangeEvents on a background thread.",
                      "fullname": "com.layer.sdk.listeners.LayerChangeEventListener$BackgroundThread"
                    },
                    {
                      "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                      "comment": null,
                      "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                    }
                  ],
                  "methods": {
                    "constructor": [],
                    "static": [],
                    "instance": []
                  },
                  "name": "Weak",
                  "comment": "A LayerChangeEventListener.BackgroundThread which registers as a WeakReference.  This\nwill be garbage collected without a stronger external reference.",
                  "nestedClasses": [],
                  "fullname": "com.layer.sdk.listeners.LayerChangeEventListener$BackgroundThread$Weak",
                  "enumClasses": [],
                  "fields": [],
                  "derivedClasses": []
                }
              ],
              "fullname": "com.layer.sdk.listeners.LayerChangeEventListener$BackgroundThread",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": [
                {
                  "name": "Weak",
                  "comment": "A LayerChangeEventListener.BackgroundThread which registers as a WeakReference.  This\nwill be garbage collected without a stronger external reference.",
                  "fullname": "com.layer.sdk.listeners.LayerChangeEventListener$BackgroundThread$Weak"
                }
              ]
            }
          ],
          "fullname": "com.layer.sdk.listeners.LayerChangeEventListener",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": [
            {
              "name": "BackgroundThread",
              "comment": "LayerChangeEventListener.BackgroundThread receives LayerChangeEvents on a background thread.",
              "fullname": "com.layer.sdk.listeners.LayerChangeEventListener$BackgroundThread"
            },
            {
              "name": "Weak",
              "comment": "A LayerChangeEventListener.BackgroundThread which registers as a WeakReference.  This\nwill be garbage collected without a stronger external reference.",
              "fullname": "com.layer.sdk.listeners.LayerChangeEventListener$BackgroundThread$Weak"
            },
            {
              "name": "Weak",
              "comment": "A LayerChangeEventListener.BackgroundThread which registers as a WeakReference.  This\nwill be garbage collected without a stronger external reference.",
              "fullname": "com.layer.sdk.listeners.LayerChangeEventListener$Weak"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "void onTypingIndicator(com.layer.sdk.LayerClient client, com.layer.sdk.messaging.Conversation conversation, java.lang.String userId, com.layer.sdk.listeners.LayerTypingIndicatorListener.TypingIndicator typingIndicator)",
                "name": "onTypingIndicator",
                "callSignature": "onTypingIndicator(client, conversation, userId, typingIndicator)",
                "comment": "Called when a remote typing indicator is received.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "description": "The LayerClient that received the typing indicator.",
                    "type": "LayerClient"
                  },
                  {
                    "name": "conversation",
                    "description": "The Conversation the typing indicator was received for.",
                    "type": "Conversation"
                  },
                  {
                    "name": "userId",
                    "description": "The user ID who generated the typing indicator.",
                    "type": "String"
                  },
                  {
                    "name": "typingIndicator",
                    "description": "The TypingIndicator event.",
                    "type": "TypingIndicator"
                  }
                ],
                "exceptions": []
              }
            ]
          },
          "name": "LayerTypingIndicatorListener",
          "comment": "LayerTypingIndicatorListener provides listeners with callbacks when a remote typing indication is\nreceived.",
          "nestedClasses": [
            {
              "implementedInterfaces": [
                {
                  "name": "LayerTypingIndicatorListener",
                  "comment": "LayerTypingIndicatorListener provides listeners with callbacks when a remote typing indication is\nreceived.",
                  "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener"
                },
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Weak",
              "comment": "A LayerTypingIndicatorListener which registers as a WeakReference.  This will be garbage\ncollected without a stronger external reference.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener$Weak",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread"
                },
                {
                  "name": "LayerTypingIndicatorListener",
                  "comment": "LayerTypingIndicatorListener provides listeners with callbacks when a remote typing indication is\nreceived.",
                  "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "BackgroundThread",
              "comment": null,
              "nestedClasses": [
                {
                  "implementedInterfaces": [
                    {
                      "name": "BackgroundThread",
                      "comment": null,
                      "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener$BackgroundThread"
                    },
                    {
                      "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                      "comment": null,
                      "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                    }
                  ],
                  "methods": {
                    "constructor": [],
                    "static": [],
                    "instance": []
                  },
                  "name": "Weak",
                  "comment": null,
                  "nestedClasses": [],
                  "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener$BackgroundThread$Weak",
                  "enumClasses": [],
                  "fields": [],
                  "derivedClasses": []
                }
              ],
              "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener$BackgroundThread",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": [
                {
                  "name": "Weak",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener$BackgroundThread$Weak"
                }
              ]
            }
          ],
          "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [
                  {
                    "declarationSignature": "public static com.layer.sdk.listeners.LayerTypingIndicatorListener.TypingIndicator fromValue(int value)",
                    "name": "fromValue",
                    "callSignature": "fromValue(value)",
                    "comment": null,
                    "returns": {
                      "type": "TypingIndicator"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "value",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "instance": [
                  {
                    "declarationSignature": "public int getValue()",
                    "name": "getValue",
                    "callSignature": "getValue()",
                    "comment": null,
                    "returns": {
                      "type": "int"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "TypingIndicator",
              "comment": "Enumeration representing a typing indication event.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener$TypingIndicator",
              "enumClasses": [],
              "fields": [
                {
                  "name": "STARTED",
                  "comment": null,
                  "type": "TypingIndicator"
                },
                {
                  "name": "PAUSED",
                  "comment": null,
                  "type": "TypingIndicator"
                },
                {
                  "name": "FINISHED",
                  "comment": null,
                  "type": "TypingIndicator"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": [
            {
              "name": "Weak",
              "comment": "A LayerTypingIndicatorListener which registers as a WeakReference.  This will be garbage\ncollected without a stronger external reference.",
              "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener$Weak"
            },
            {
              "name": "Weak",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener$BackgroundThread$Weak"
            },
            {
              "name": "BackgroundThread",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerTypingIndicatorListener$BackgroundThread"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "void onAuthenticated(com.layer.sdk.LayerClient client, java.lang.String userId)",
                "name": "onAuthenticated",
                "callSignature": "onAuthenticated(client, userId)",
                "comment": "The LayerClient reports that it is authenticated and ready for messaging.  It is possible to\nbe authenticated but not connected (offline mode); check connection state and connect as\nneeded.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "description": "The LayerClient reporting authentication.",
                    "type": "LayerClient"
                  },
                  {
                    "name": "userId",
                    "description": "The user ID the LayerClient has authenticated as.  This ID comes from the\n              externally-generated `identity token` provided when answering an authentication\n              challenge.",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void onDeauthenticated(com.layer.sdk.LayerClient client)",
                "name": "onDeauthenticated",
                "callSignature": "onDeauthenticated(client)",
                "comment": "The LayerClient reports that it is deauthenticated, no longer ready to communicate.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "description": "The LayerClient reporting deauthentication.",
                    "type": "LayerClient"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void onAuthenticationChallenge(com.layer.sdk.LayerClient client, java.lang.String nonce)",
                "name": "onAuthenticationChallenge",
                "callSignature": "onAuthenticationChallenge(client, nonce)",
                "comment": "During authentication, Layer presents a cryptographic `nonce` which must be used to\nexternally-generate an `identity token`.  When generated, respond to the authentication\nchallenge by supplying the `identity token` to LayerClient.answerAuthenticationChallenge().",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "description": "LayerClient generating the authentication challenge.",
                    "type": "LayerClient"
                  },
                  {
                    "name": "nonce",
                    "description": "Cryptographic `nonce` for use when generating an `identity token`.",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void onAuthenticationError(com.layer.sdk.LayerClient client, com.layer.sdk.exceptions.LayerException exception)",
                "name": "onAuthenticationError",
                "callSignature": "onAuthenticationError(client, exception)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "type": "LayerClient"
                  },
                  {
                    "name": "exception",
                    "type": "LayerException"
                  }
                ],
                "exceptions": []
              }
            ]
          },
          "name": "LayerAuthenticationListener",
          "comment": "LayerAuthenticationListener allows a listener to receive authentication callbacks from a\nLayerClient.  At least one LayerAuthenticationListener must handle authentication challenges in\norder for the LayerClient to successfully authenticate.",
          "nestedClasses": [
            {
              "implementedInterfaces": [
                {
                  "name": "LayerAuthenticationListener",
                  "comment": "LayerAuthenticationListener allows a listener to receive authentication callbacks from a\nLayerClient.  At least one LayerAuthenticationListener must handle authentication challenges in\norder for the LayerClient to successfully authenticate.",
                  "fullname": "com.layer.sdk.listeners.LayerAuthenticationListener"
                },
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Weak",
              "comment": "A LayerAuthenticationListener which registers as a WeakReference.  This will be garbage\ncollected without a stronger external reference.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.listeners.LayerAuthenticationListener$Weak",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread"
                },
                {
                  "name": "LayerAuthenticationListener",
                  "comment": "LayerAuthenticationListener allows a listener to receive authentication callbacks from a\nLayerClient.  At least one LayerAuthenticationListener must handle authentication challenges in\norder for the LayerClient to successfully authenticate.",
                  "fullname": "com.layer.sdk.listeners.LayerAuthenticationListener"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "BackgroundThread",
              "comment": null,
              "nestedClasses": [
                {
                  "implementedInterfaces": [
                    {
                      "name": "BackgroundThread",
                      "comment": null,
                      "fullname": "com.layer.sdk.listeners.LayerAuthenticationListener$BackgroundThread"
                    },
                    {
                      "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                      "comment": null,
                      "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                    }
                  ],
                  "methods": {
                    "constructor": [],
                    "static": [],
                    "instance": []
                  },
                  "name": "Weak",
                  "comment": null,
                  "nestedClasses": [],
                  "fullname": "com.layer.sdk.listeners.LayerAuthenticationListener$BackgroundThread$Weak",
                  "enumClasses": [],
                  "fields": [],
                  "derivedClasses": []
                }
              ],
              "fullname": "com.layer.sdk.listeners.LayerAuthenticationListener$BackgroundThread",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": [
                {
                  "name": "Weak",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerAuthenticationListener$BackgroundThread$Weak"
                }
              ]
            }
          ],
          "fullname": "com.layer.sdk.listeners.LayerAuthenticationListener",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": [
            {
              "name": "Weak",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerAuthenticationListener$BackgroundThread$Weak"
            },
            {
              "name": "BackgroundThread",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerAuthenticationListener$BackgroundThread"
            },
            {
              "name": "Weak",
              "comment": "A LayerAuthenticationListener which registers as a WeakReference.  This will be garbage\ncollected without a stronger external reference.",
              "fullname": "com.layer.sdk.listeners.LayerAuthenticationListener$Weak"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "void onConnectionConnected(com.layer.sdk.LayerClient client)",
                "name": "onConnectionConnected",
                "callSignature": "onConnectionConnected(client)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "type": "LayerClient"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void onConnectionDisconnected(com.layer.sdk.LayerClient client)",
                "name": "onConnectionDisconnected",
                "callSignature": "onConnectionDisconnected(client)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "type": "LayerClient"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void onConnectionError(com.layer.sdk.LayerClient client, com.layer.sdk.exceptions.LayerException exception)",
                "name": "onConnectionError",
                "callSignature": "onConnectionError(client, exception)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "type": "LayerClient"
                  },
                  {
                    "name": "exception",
                    "type": "LayerException"
                  }
                ],
                "exceptions": []
              }
            ]
          },
          "name": "LayerConnectionListener",
          "comment": null,
          "nestedClasses": [
            {
              "implementedInterfaces": [
                {
                  "name": "LayerConnectionListener",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerConnectionListener"
                },
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Weak",
              "comment": "A LayerConnectionListener which registers as a WeakReference.  This will be garbage collected\nwithout a stronger external reference.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.listeners.LayerConnectionListener$Weak",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread"
                },
                {
                  "name": "LayerConnectionListener",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerConnectionListener"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "BackgroundThread",
              "comment": null,
              "nestedClasses": [
                {
                  "implementedInterfaces": [
                    {
                      "name": "BackgroundThread",
                      "comment": null,
                      "fullname": "com.layer.sdk.listeners.LayerConnectionListener$BackgroundThread"
                    },
                    {
                      "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                      "comment": null,
                      "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                    }
                  ],
                  "methods": {
                    "constructor": [],
                    "static": [],
                    "instance": []
                  },
                  "name": "Weak",
                  "comment": null,
                  "nestedClasses": [],
                  "fullname": "com.layer.sdk.listeners.LayerConnectionListener$BackgroundThread$Weak",
                  "enumClasses": [],
                  "fields": [],
                  "derivedClasses": []
                }
              ],
              "fullname": "com.layer.sdk.listeners.LayerConnectionListener$BackgroundThread",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": [
                {
                  "name": "Weak",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerConnectionListener$BackgroundThread$Weak"
                }
              ]
            }
          ],
          "fullname": "com.layer.sdk.listeners.LayerConnectionListener",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": [
            {
              "name": "Weak",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerConnectionListener$BackgroundThread$Weak"
            },
            {
              "name": "BackgroundThread",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerConnectionListener$BackgroundThread"
            },
            {
              "name": "Weak",
              "comment": "A LayerConnectionListener which registers as a WeakReference.  This will be garbage collected\nwithout a stronger external reference.",
              "fullname": "com.layer.sdk.listeners.LayerConnectionListener$Weak"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "void onPolicyListUpdate(com.layer.sdk.LayerClient client, java.util.List oldPolicyList, java.util.List newPolicyList)",
                "name": "onPolicyListUpdate",
                "callSignature": "onPolicyListUpdate(client, oldPolicyList, newPolicyList)",
                "comment": "Alerts a listener to policy updates.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "client",
                    "description": "The LayerClient reporting this policy update.",
                    "type": "LayerClient"
                  },
                  {
                    "name": "oldPolicyList",
                    "description": "The list of policies prior to this update.",
                    "type": "List"
                  },
                  {
                    "name": "newPolicyList",
                    "description": "The list of policies after this update.",
                    "type": "List"
                  }
                ],
                "exceptions": []
              }
            ]
          },
          "name": "LayerPolicyListener",
          "comment": "LayerPolicyListener allows an external class to monitor a LayerClient for policy updates.",
          "nestedClasses": [
            {
              "implementedInterfaces": [
                {
                  "name": "LayerPolicyListener",
                  "comment": "LayerPolicyListener allows an external class to monitor a LayerClient for policy updates.",
                  "fullname": "com.layer.sdk.listeners.LayerPolicyListener"
                },
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Weak",
              "comment": "A LayerPolicyListener which registers as a WeakReference.  This will be garbage collected\nwithout a stronger external reference.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.listeners.LayerPolicyListener$Weak",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread",
                  "comment": null,
                  "fullname": "com.layer.sdk.internal.utils.ListenerIterable$BackgroundThread"
                },
                {
                  "name": "LayerPolicyListener",
                  "comment": "LayerPolicyListener allows an external class to monitor a LayerClient for policy updates.",
                  "fullname": "com.layer.sdk.listeners.LayerPolicyListener"
                }
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "BackgroundThread",
              "comment": null,
              "nestedClasses": [
                {
                  "implementedInterfaces": [
                    {
                      "name": "BackgroundThread",
                      "comment": null,
                      "fullname": "com.layer.sdk.listeners.LayerPolicyListener$BackgroundThread"
                    },
                    {
                      "name": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef",
                      "comment": null,
                      "fullname": "com.layer.sdk.internal.utils.ListenerIterable$WeakRef"
                    }
                  ],
                  "methods": {
                    "constructor": [],
                    "static": [],
                    "instance": []
                  },
                  "name": "Weak",
                  "comment": null,
                  "nestedClasses": [],
                  "fullname": "com.layer.sdk.listeners.LayerPolicyListener$BackgroundThread$Weak",
                  "enumClasses": [],
                  "fields": [],
                  "derivedClasses": []
                }
              ],
              "fullname": "com.layer.sdk.listeners.LayerPolicyListener$BackgroundThread",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": [
                {
                  "name": "Weak",
                  "comment": null,
                  "fullname": "com.layer.sdk.listeners.LayerPolicyListener$BackgroundThread$Weak"
                }
              ]
            }
          ],
          "fullname": "com.layer.sdk.listeners.LayerPolicyListener",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": [
            {
              "name": "Weak",
              "comment": "A LayerPolicyListener which registers as a WeakReference.  This will be garbage collected\nwithout a stronger external reference.",
              "fullname": "com.layer.sdk.listeners.LayerPolicyListener$Weak"
            },
            {
              "name": "Weak",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerPolicyListener$BackgroundThread$Weak"
            },
            {
              "name": "BackgroundThread",
              "comment": null,
              "fullname": "com.layer.sdk.listeners.LayerPolicyListener$BackgroundThread"
            }
          ]
        }
      ],
      "name": "com.layer.sdk.listeners"
    },
    {
      "classes": [
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": []
          },
          "name": "LayerObject",
          "comment": null,
          "nestedClasses": [],
          "fullname": "com.layer.sdk.messaging.LayerObject",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [
                  {
                    "declarationSignature": "public static com.layer.sdk.messaging.LayerObject.Type fromObject(com.layer.sdk.messaging.LayerObject object)",
                    "name": "fromObject",
                    "callSignature": "fromObject(object)",
                    "comment": null,
                    "returns": {
                      "type": "Type"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "object",
                        "type": "LayerObject"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "instance": []
              },
              "name": "Type",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.messaging.LayerObject$Type",
              "enumClasses": [],
              "fields": [
                {
                  "name": "CONVERSATION",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "ANNOUNCEMENT",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "MESSAGE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "MESSAGE_PART",
                  "comment": null,
                  "type": "Type"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": [
            {
              "name": "MessagePart",
              "comment": "The `MessagePart` class represents a piece of content embedded within a containing\nMessage. Each part has a specific MIME type identifying the type of content it contains.\nMessages may contain an arbitrary number of parts with any MIME type that the application\nwishes to support.",
              "fullname": "com.layer.sdk.messaging.MessagePart"
            },
            {
              "name": "Actor",
              "comment": "The `Actor` class represents a user or application integration that took a particular action such as sending a message.",
              "fullname": "com.layer.sdk.messaging.Actor"
            },
            {
              "name": "Message",
              "comment": "The `Message` class represents a message within a conversation (modeled by the `Conversation`\nclass) between two or more participants within Layer.",
              "fullname": "com.layer.sdk.messaging.Message"
            },
            {
              "name": "Announcement",
              "comment": "The `Announcement` class represents a message outside of a conversation for the user.",
              "fullname": "com.layer.sdk.messaging.Announcement"
            },
            {
              "name": "Conversation",
              "comment": "The `Conversation` class models a conversations between two or more participants within Layer. A\nconversation is an on-going stream of messages (modeled by the `Message` class) synchronized\namong all participants.",
              "fullname": "com.layer.sdk.messaging.Conversation"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [
              {
                "declarationSignature": "public static com.layer.sdk.messaging.Metadata newInstance()",
                "name": "newInstance",
                "callSignature": "newInstance()",
                "comment": null,
                "returns": {
                  "type": "Metadata"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public static com.layer.sdk.messaging.Metadata fromKeyPathMap(java.util.Map keyPathMap)",
                "name": "fromKeyPathMap",
                "callSignature": "fromKeyPathMap(keyPathMap)",
                "comment": "Constructs a nested Metadata from a map of String values, keyed by key path.  Example:\n{\"userIds.12345.name\" : \"Washington\", \"userIds.67890.name\" : \"George\"}",
                "returns": {
                  "description": "",
                  "type": "Metadata"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "keyPathMap",
                    "description": "",
                    "type": "Map"
                  }
                ],
                "exceptions": []
              }
            ],
            "instance": [
              {
                "declarationSignature": "public java.lang.Object get(java.lang.String key)",
                "name": "get",
                "callSignature": "get(key)",
                "comment": "Gets the value at the given key, or `null` if the key does not exist.",
                "returns": {
                  "description": "Existing value at the given key, or `null` if no such key exists",
                  "type": "Object"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "key",
                    "description": "Key from which to get data",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.Object put(java.lang.String key, java.lang.String value)",
                "name": "put",
                "callSignature": "put(key, value)",
                "comment": "Puts the given String value at the given key, returning any previous value at that key.",
                "returns": {
                  "description": "Existing value at the given key",
                  "type": "Object"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "key",
                    "description": "Key to put data",
                    "type": "String"
                  },
                  {
                    "name": "value",
                    "description": "Value to put at the key",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.Object put(java.lang.String key, com.layer.sdk.messaging.Metadata metadata)",
                "name": "put",
                "callSignature": "put(key, metadata)",
                "comment": "Puts the given Metadata value at the given key, returning any previous value at that key.",
                "returns": {
                  "description": "Existing value at the given key",
                  "type": "Object"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "key",
                    "description": "Key to put data",
                    "type": "String"
                  },
                  {
                    "name": "metadata",
                    "description": "Value to put at the key",
                    "type": "Metadata"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.Object putMergeDelete(java.lang.String key)",
                "name": "putMergeDelete",
                "callSignature": "putMergeDelete(key)",
                "comment": "Marks the given key for deletion during merge.",
                "returns": {
                  "description": "Existing value at the given key",
                  "type": "Object"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "key",
                    "description": "Key to delete during merge",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.Object remove(java.lang.String key)",
                "name": "remove",
                "callSignature": "remove(key)",
                "comment": "Removes the given key, returning any existing value at that key.",
                "returns": {
                  "description": "Existing value at the given key",
                  "type": "Object"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "key",
                    "description": "Key to remove",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void clear()",
                "name": "clear",
                "callSignature": "clear()",
                "comment": "Removes all entries from this Metadata.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean containsKey(java.lang.String key)",
                "name": "containsKey",
                "callSignature": "containsKey(key)",
                "comment": "Returns whether this Metadata contains the specified key.",
                "returns": {
                  "description": "`true` if this Metadata contains the specified key, or `false` otherwise",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "key",
                    "description": "The key to search for",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.Set keySet()",
                "name": "keySet",
                "callSignature": "keySet()",
                "comment": "Returns the set of keys in this Metadata.",
                "returns": {
                  "description": "the set of keys in this Metadata",
                  "type": "Set"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.Set entrySet()",
                "name": "entrySet",
                "callSignature": "entrySet()",
                "comment": "Returns the set of entries in this Metadata.",
                "returns": {
                  "description": "the set of entries in this Metadata",
                  "type": "Set"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract int size()",
                "name": "size",
                "callSignature": "size()",
                "comment": "Returns the number of entries in this Metadata.",
                "returns": {
                  "description": "the number of entries in this Metadata",
                  "type": "int"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean isEmpty()",
                "name": "isEmpty",
                "callSignature": "isEmpty()",
                "comment": "Returns `true` if this Metadata contains no keys, or `false` otherwise.",
                "returns": {
                  "description": "`true` if this Metadata contains no keys, or `false` otherwise",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "Metadata",
          "comment": "Metadata represents a set of keys and values.",
          "nestedClasses": [
            {
              "implementedInterfaces": [
                {
                  "name": "Map$Entry",
                  "comment": null,
                  "fullname": "java.util.Map$Entry"
                }
              ],
              "methods": {
                "constructor": [
                  {
                    "declarationSignature": "public Entry(java.lang.String key, java.lang.Object value)",
                    "name": "Entry",
                    "callSignature": "Entry(key, value)",
                    "comment": null,
                    "throws": [],
                    "parameters": [
                      {
                        "name": "key",
                        "type": "String"
                      },
                      {
                        "name": "value",
                        "type": "Object"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "public final java.lang.String getKey()",
                    "name": "getKey",
                    "callSignature": "getKey()",
                    "comment": null,
                    "returns": {
                      "type": "String"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public final java.lang.Object getValue()",
                    "name": "getValue",
                    "callSignature": "getValue()",
                    "comment": null,
                    "returns": {
                      "type": "Object"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public final java.lang.Object setValue(java.lang.Object value)",
                    "name": "setValue",
                    "callSignature": "setValue(value)",
                    "comment": null,
                    "returns": {
                      "type": "Object"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "value",
                        "type": "Object"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean equals(java.lang.Object o)",
                    "name": "equals",
                    "callSignature": "equals(o)",
                    "comment": null,
                    "returns": {
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "o",
                        "type": "Object"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public final int hashCode()",
                    "name": "hashCode",
                    "callSignature": "hashCode()",
                    "comment": null,
                    "returns": {
                      "type": "int"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public final java.lang.String toString()",
                    "name": "toString",
                    "callSignature": "toString()",
                    "comment": null,
                    "returns": {
                      "type": "String"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "Entry",
              "comment": "Metadata.Entry represents a String key and Object value within a Metadata object.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.messaging.Metadata$Entry",
              "enumClasses": [],
              "fields": [
                {
                  "name": "key",
                  "comment": null,
                  "type": "String"
                },
                {
                  "name": "value",
                  "comment": null,
                  "type": "Object"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fullname": "com.layer.sdk.messaging.Metadata",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [
            {
              "name": "LayerObject",
              "comment": null,
              "fullname": "com.layer.sdk.messaging.LayerObject"
            },
            {
              "name": "Queryable",
              "comment": "Objects with Query support declare so on a per attribute basis by implementing this `Queryable`\ninterface.  Not all operators are available for each `Queryable` attribute. Consult the\ndocumentation on each property for details about querying semantics.",
              "fullname": "com.layer.sdk.query.Queryable"
            }
          ],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "void delete(com.layer.sdk.LayerClient.DeletionMode deletionMode)",
                "name": "delete",
                "callSignature": "delete(deletionMode)",
                "comment": "Deletes a Message according to the DeletionMode provided.  Any in-memory representations of\nthe Message will now return `true` on Message.isDeleted().\n\nMessage deletion can be monitored by registering a LayerChangeEventListener and listening for\nMessage DELETE events.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "deletionMode",
                    "description": "the deletion mode to apply.",
                    "type": "DeletionMode"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "void markAsRead()",
                "name": "markAsRead",
                "callSignature": "markAsRead()",
                "comment": "Marks a Message as `read` and synchronizes the \"read receipt\" among all participants in the\nConversation, as well as all other devices the authenticated user logs in on.\n\nRecipient status can be monitored by registering a LayerChangeEventListener and\nlistening for UPDATE events on the \"recipientStatus\" attribute.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "android.net.Uri getId()",
                "name": "getId",
                "callSignature": "getId()",
                "comment": "A unique identifier for this Message.",
                "returns": {
                  "description": "a unique identifier for this Message.",
                  "type": "android.net.Uri"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "long getPosition()",
                "name": "getPosition",
                "callSignature": "getPosition()",
                "comment": "Returns the conversational order of this Message within its Conversation.  Prior to sending,\nthe return value will be equal to Long.MAX_VALUE.",
                "returns": {
                  "description": "the conversational order of this message, starting from 0 with the oldest message.",
                  "type": "long"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "com.layer.sdk.messaging.Conversation getConversation()",
                "name": "getConversation",
                "callSignature": "getConversation()",
                "comment": "Returns the Conversation that the Message is a part of.",
                "returns": {
                  "description": "the Conversation that the Message is a part of.",
                  "type": "Conversation"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "java.util.List getMessageParts()",
                "name": "getMessageParts",
                "callSignature": "getMessageParts()",
                "comment": "Returns a list of message parts (modeled by the `MessagePart` class) that provide access to\nthe content of Message.",
                "returns": {
                  "description": "this Message's list of MessageParts.",
                  "type": "List"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "boolean isSent()",
                "name": "isSent",
                "callSignature": "isSent()",
                "comment": "A message is considered `sent` after synchronization with the Layer Cloud..\n\nLayerChangeEventListeners can capture the `isSent` transition by listening for deletes.",
                "returns": {
                  "description": "`true` if this message has been deleted locally or remotely with deleteMessage().",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "boolean isDeleted()",
                "name": "isDeleted",
                "callSignature": "isDeleted()",
                "comment": "A message is considered `deleted` after LayerClient.deleteMessage() has been called on it.\n\nLayerChangeEventListeners can capture the `deleted` transition by listening for deletes.",
                "returns": {
                  "description": "`true` if this message has been deleted locally or remotely with deleteMessage().",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "java.util.Date getSentAt()",
                "name": "getSentAt",
                "callSignature": "getSentAt()",
                "comment": "The date and time that the message was originally sent to server, or `null` if not yet sent.",
                "returns": {
                  "description": "the date and time that the message was originally sent to server, or `null` if not yet sent.",
                  "type": "Date"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "java.util.Date getReceivedAt()",
                "name": "getReceivedAt",
                "callSignature": "getReceivedAt()",
                "comment": "The date and time that the message was received by the authenticated user.",
                "returns": {
                  "description": "the date and time that the message was received by the authenticated user.",
                  "type": "Date"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "com.layer.sdk.messaging.Actor getSender()",
                "name": "getSender",
                "callSignature": "getSender()",
                "comment": "Returns the Actor object representing the message sender.",
                "returns": {
                  "description": "the Actor object representing the message sender.",
                  "type": "Actor"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "java.util.Map getRecipientStatus()",
                "name": "getRecipientStatus",
                "callSignature": "getRecipientStatus()",
                "comment": "Returns a dictionary keyed by the user ID of all participants in the conversation that the\nmessage is a part of, and whose values are `RecipientStatus` representations of each\nrecipient's status.\n\nLayerChangeEventListeners can capture recipient status transitions by listening for updates\non the \"receipt\" attribute.",
                "returns": {
                  "type": "Map"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "com.layer.sdk.messaging.Message.RecipientStatus getRecipientStatus(java.lang.String userId)",
                "name": "getRecipientStatus",
                "callSignature": "getRecipientStatus(userId)",
                "comment": "Retrieves the message state for a given participant in the conversation.\n\nLayerChangeEventListeners can capture recipient status transitions by listening for updates\non the \"receipt\" attribute.",
                "returns": {
                  "description": "A `MessageState` value specifying the message state for the given participant or\n`null` if the specified user is not a participant in the conversation.",
                  "type": "RecipientStatus"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "userId",
                    "description": "The user ID to retrieve the message state for.",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "com.layer.sdk.messaging.MessageOptions getOptions()",
                "name": "getOptions",
                "callSignature": "getOptions()",
                "comment": "Gets this Message's MessageOptions.  Options are mutable until the message gets sent.  After\nsending, the return value becomes `null`.",
                "returns": {
                  "description": "this Message's MessageOptions.",
                  "type": "MessageOptions"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "Message",
          "comment": "The `Message` class represents a message within a conversation (modeled by the `Conversation`\nclass) between two or more participants within Layer.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.messaging.Message",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "RecipientStatus",
              "comment": "`RecipientStatus` is an enumerated value declaring the lifecycle states for recipient status.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.messaging.Message$RecipientStatus",
              "enumClasses": [],
              "fields": [
                {
                  "name": "PENDING",
                  "comment": null,
                  "type": "RecipientStatus"
                },
                {
                  "name": "SENT",
                  "comment": null,
                  "type": "RecipientStatus"
                },
                {
                  "name": "DELIVERED",
                  "comment": null,
                  "type": "RecipientStatus"
                },
                {
                  "name": "READ",
                  "comment": null,
                  "type": "RecipientStatus"
                }
              ],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "Property",
                  "comment": null,
                  "fullname": "com.layer.sdk.query.Queryable$Property"
                }
              ],
              "methods": {
                "constructor": [
                  {
                    "declarationSignature": "Property(boolean sortable, int queryByFlags)",
                    "name": "Property",
                    "callSignature": "Property(sortable, queryByFlags)",
                    "comment": null,
                    "throws": [],
                    "parameters": [
                      {
                        "name": "sortable",
                        "type": "boolean"
                      },
                      {
                        "name": "queryByFlags",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "public boolean isSortable()",
                    "name": "isSortable",
                    "callSignature": "isSortable()",
                    "comment": "Retrieves whether the Property is sortable or not",
                    "returns": {
                      "description": "true when the Property is sortable, false otherwise",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isEqualityQueryable()",
                    "name": "isEqualityQueryable",
                    "callSignature": "isEqualityQueryable()",
                    "comment": "Retrieves whether the Property is comparable by equality or not",
                    "returns": {
                      "description": "whether the Property is comparable by equality or not",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isRelativeQueryable()",
                    "name": "isRelativeQueryable",
                    "callSignature": "isRelativeQueryable()",
                    "comment": "Retrieves whether the Property is comparable by relation or not",
                    "returns": {
                      "description": "whether the Property is comparable by relation or not",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isInclusionQueryable()",
                    "name": "isInclusionQueryable",
                    "callSignature": "isInclusionQueryable()",
                    "comment": "Retrieves whether the Property is comparable by inclusion or not",
                    "returns": {
                      "description": "whether the Property is comparable by inclusion or not",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "Property",
              "comment": "Enumerated properties that can be used to run queries on the Message object",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.messaging.Message$Property",
              "enumClasses": [],
              "fields": [
                {
                  "name": "ID",
                  "comment": "Message unique ID, not sortable and supports comparison by Equality or Inclusion",
                  "type": "Property"
                },
                {
                  "name": "POSITION",
                  "comment": "Message index, sortable and supports comparison by Equality, Inclusion or Relation",
                  "type": "Property"
                },
                {
                  "name": "CONVERSATION",
                  "comment": "Conversation that the message belongs to, not sortable and supports comparison by Equality or Inclusion",
                  "type": "Property"
                },
                {
                  "name": "IS_SENT",
                  "comment": "Whether the message was sent or not, sortable and supports comparisons by Equality",
                  "type": "Property"
                },
                {
                  "name": "SENT_AT",
                  "comment": "Sent at date for the message (epoch time in milliseconds), sortable and supports comparisons by Equality, Inclusion or Relation",
                  "type": "Property"
                },
                {
                  "name": "RECEIVED_AT",
                  "comment": "Received at date for the message (epoch time in milliseconds), sortable and supports comparisons by Equality, Inclusion or Relation",
                  "type": "Property"
                },
                {
                  "name": "SENDER_USER_ID",
                  "comment": "User ID of the sender, not sortable and supports comparison by Equality or Inclusion",
                  "type": "Property"
                },
                {
                  "name": "SENDER_NAME",
                  "comment": "Name of the sender, not sortable and supports comparison by Equality or Inclusion",
                  "type": "Property"
                },
                {
                  "name": "IS_UNREAD",
                  "comment": "Whether the message was unread or read, sortable and supports comparisons by Equality",
                  "type": "Property"
                },
                {
                  "name": "PART_MIME_TYPE",
                  "comment": "Mime type of the message parts that comprise this Message, not sortable and supports comparison by Equality or Inclusion",
                  "type": "Property"
                },
                {
                  "name": "PART_SIZE",
                  "comment": "Size of the Message parts, not sortable and supports comparison by Equality, Inclusion or Relation",
                  "type": "Property"
                },
                {
                  "name": "PART_IS_TRANSFER_PENDING",
                  "comment": "Whether the message part's transfer is pending or not, supports comparisons by Equality",
                  "type": "Property"
                },
                {
                  "name": "PART_IS_TRANSFERRING",
                  "comment": "Whether the message part's transfer is ongoing or not, supports comparisons by Equality",
                  "type": "Property"
                },
                {
                  "name": "PART_ANY_TRANSFERS_COMPLETE",
                  "comment": "Whether any of the message part transfer is complete, supports comparisons by Equality",
                  "type": "Property"
                },
                {
                  "name": "PART_ALL_TRANSFERS_COMPLETE",
                  "comment": "Whether all the message parts transfer is complete, supports comparisons by Equality",
                  "type": "Property"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": [
            {
              "name": "Announcement",
              "comment": "The `Announcement` class represents a message outside of a conversation for the user.",
              "fullname": "com.layer.sdk.messaging.Announcement"
            }
          ]
        },
        {
          "implementedInterfaces": [
            {
              "name": "LayerObject",
              "comment": null,
              "fullname": "com.layer.sdk.messaging.LayerObject"
            },
            {
              "name": "Queryable",
              "comment": "Objects with Query support declare so on a per attribute basis by implementing this `Queryable`\ninterface.  Not all operators are available for each `Queryable` attribute. Consult the\ndocumentation on each property for details about querying semantics.",
              "fullname": "com.layer.sdk.query.Queryable"
            }
          ],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public abstract void addParticipants(java.util.List participants)",
                "name": "addParticipants",
                "callSignature": "addParticipants(participants)",
                "comment": "Adds participants to this Conversation.  Participants are user IDs from an external\nserver, for example the identity server used to generate `identity tokens`.\n\nThe addition of a participant can be monitored by registering a LayerChangeEventListener and\nlistening for UPDATE events on a conversation's \"participants\" attribute.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "participants",
                    "description": "the list of participants to add.",
                    "type": "List"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public void addParticipants(java.lang.String... participants)",
                "name": "addParticipants",
                "callSignature": "addParticipants(participants)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "participants",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void removeParticipants(java.util.List participants)",
                "name": "removeParticipants",
                "callSignature": "removeParticipants(participants)",
                "comment": "Removes participants from an existing Conversation. Participants are user IDs from an\nexternal server, for example the identity server used to generate `identity tokens`.\n\nThe participant removal can be monitored by registering a LayerChangeEventListener and\nlistening for UPDATE events on a conversation's \"participants\" attribute.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "participants",
                    "description": "the list of participants to remove.",
                    "type": "List"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public void removeParticipants(java.lang.String... participants)",
                "name": "removeParticipants",
                "callSignature": "removeParticipants(participants)",
                "comment": null,
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "participants",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void delete(com.layer.sdk.LayerClient.DeletionMode deletionMode)",
                "name": "delete",
                "callSignature": "delete(deletionMode)",
                "comment": "Deletes a Conversation and all associated messages according to the given DeletionMode.  Any\nin-memory representations will return `true` for their isDeleted() method.\n\nThe deletion can be monitored by registering a LayerChangeEventListener and listening for\nDELETE events.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "deletionMode",
                    "description": "the deletion mode to apply.",
                    "type": "DeletionMode"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void putMetadataAtKeyPath(java.lang.String keyPath, java.lang.String value)",
                "name": "putMetadataAtKeyPath",
                "callSignature": "putMetadataAtKeyPath(keyPath, value)",
                "comment": "Puts the given value in the Conversation's metadata at the given key path.  If a value\nalready exists, it is overwritten with the new value.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "keyPath",
                    "description": "key path to set.",
                    "type": "String"
                  },
                  {
                    "name": "value",
                    "description": "value to put at the given key path.",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void putMetadata(com.layer.sdk.messaging.Metadata metadata, boolean isMerge)",
                "name": "putMetadata",
                "callSignature": "putMetadata(metadata, isMerge)",
                "comment": "Puts the given metadata map into the Conversation's metadata, either merging the provided\nmetadata map with the existing metadata, or replacing (if `isMerge` is false).  When merging,\na `null` value removes any existing value for that key path.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "metadata",
                    "description": "metadata map to apply or merge.",
                    "type": "Metadata"
                  },
                  {
                    "name": "isMerge",
                    "description": "merge if true, replace if false.",
                    "type": "boolean"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void removeMetadataAtKeyPath(java.lang.String keyPath)",
                "name": "removeMetadataAtKeyPath",
                "callSignature": "removeMetadataAtKeyPath(keyPath)",
                "comment": "Removes the given key path from the Conversation's metadata.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "keyPath",
                    "description": "key path to remove from this Conversation's metadata.",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void send(com.layer.sdk.messaging.Message message)",
                "name": "send",
                "callSignature": "send(message)",
                "comment": "Sends a Message to its Conversation, synchronizing the Message among all participants in the\nConversation, as well as all other devices the authenticated user logs in on. Sending a\nmessage queues the message for synchronization with the Layer Cloud.  Message.isSent() allows\nmonitoring of this message's synchronization status.\n\nThe `isSent` transitions can be monitored by registering a LayerChangeEventListener and\nlistening for UPDATE events on the \"isSent\" attribute.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "message",
                    "description": "the Message to send.",
                    "type": "Message"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void send(com.layer.sdk.listeners.LayerTypingIndicatorListener.TypingIndicator indicator)",
                "name": "send",
                "callSignature": "send(indicator)",
                "comment": "Sends a typing indication from the authenticated user to all participants in the given\nConversation.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "indicator",
                    "description": "TypingIndicator to send.",
                    "type": "TypingIndicator"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void send(com.layer.sdk.messaging.Message message, com.layer.sdk.listeners.LayerProgressListener listener)",
                "name": "send",
                "callSignature": "send(message, listener)",
                "comment": "Sends a Message to its Conversation, synchronizing the Message among all participants in the\nConversation, as well as all other devices the authenticated user logs in on. Sending a\nmessage queues the message for synchronization with the Layer Cloud.  Message.isSent() allows\nmonitoring of this message's synchronization status.\n\nThe `isSent` transitions can be monitored by registering a LayerChangeEventListener and\nlistening for UPDATE events on the \"isSent\" attribute.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "message",
                    "description": "the Message to send.",
                    "type": "Message"
                  },
                  {
                    "name": "listener",
                    "description": "upload progress notifications for individual message parts",
                    "type": "LayerProgressListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.messaging.Conversation.HistoricSyncStatus getHistoricSyncStatus()",
                "name": "getHistoricSyncStatus",
                "callSignature": "getHistoricSyncStatus()",
                "comment": "Returns the `HistoricSyncStatus` for this Conversation.",
                "returns": {
                  "description": "HistoricSyncStatus associated with this Conversation.",
                  "type": "HistoricSyncStatus"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void syncMoreHistoricMessages(int messages)",
                "name": "syncMoreHistoricMessages",
                "callSignature": "syncMoreHistoricMessages(messages)",
                "comment": "Synchronizes back `messages` more Messages from this Conversation's history on the Layer\ncloud.  If fewer Messages than `messages` are available remotely, then fewer Messages will be\nsynchronized.  If another synchronization is pending, no action is taken.\n\nCalling this method changes this Conversation's historic sync status to `SYNC_PENDING`, and a\nLayerChangeEventListener can determine synchronization completion when this Conversation's\n`historicSyncStatus` attribute changes from `SYNC_PENDING` to `MORE_AVAILABLE` or\n`NO_MORE_AVAILABLE`.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "messages",
                    "description": "The number of Messages to synchronize in from the Layer cloud.",
                    "type": "int"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void syncFromEarliestUnreadMessage()",
                "name": "syncFromEarliestUnreadMessage",
                "callSignature": "syncFromEarliestUnreadMessage()",
                "comment": "Synchronizes message history starting from the earliest unread Message up to the last Message\navailable in this Conversation's history on the Layer cloud.\n\nCalling this method changes this Conversation's historic sync status to `SYNC_PENDING`, and a\nLayerChangeEventListener can determine synchronization completion when this Conversation's\n`historicSyncStatus` attribute changes from `SYNC_PENDING` to `MORE_AVAILABLE` or\n`NO_MORE_AVAILABLE`.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void syncAllHistoricMessages()",
                "name": "syncAllHistoricMessages",
                "callSignature": "syncAllHistoricMessages()",
                "comment": "Synchronizes all message history available on the Layer cloud.\n\nCalling this method changes this Conversation's historic sync status to `SYNC_PENDING`, and a\nLayerChangeEventListener can determine synchronization completion when this Conversation's\n`historicSyncStatus` attribute changes from `SYNC_PENDING` to `NO_MORE_AVAILABLE`.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract android.net.Uri getId()",
                "name": "getId",
                "callSignature": "getId()",
                "comment": "A unique identifier for this Conversation.",
                "returns": {
                  "description": "a unique identifier for this Conversation.",
                  "type": "android.net.Uri"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.util.List getParticipants()",
                "name": "getParticipants",
                "callSignature": "getParticipants()",
                "comment": "Returns the set of user identifiers specifying who is participating in the conversation\nmodeled by the receiver.  Layer conversations are addressed using user identifiers of the\nhost application.\n\nLayerChangeEventListeners can capture participant addition and removal from a conversation\nby listening for update events on the \"participants\" attribute.",
                "returns": {
                  "type": "List"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.messaging.Message getLastMessage()",
                "name": "getLastMessage",
                "callSignature": "getLastMessage()",
                "comment": "The last message in this Conversation.",
                "returns": {
                  "description": "the last message in this Conversation.",
                  "type": "Message"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean isDeleted()",
                "name": "isDeleted",
                "callSignature": "isDeleted()",
                "comment": "A conversation is considered `deleted` after LayerClient.deleteConversation() has been called\non it.  This will only appear on in-memory instances of a Conversation after it has been\ndeleted, either locally or remotely.  An attempt to load the conversation by ID will result\nin `null` because it no longer exists. A registered LayerChangeEventListener can capture\nthe transition to isDeleted by monitoring for updates on the \"isDeleted\" attribute.  The\ndeletion of the conversation also results in a DELETE event.",
                "returns": {
                  "description": "true if the Conversation is deleted; false otherwise.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.messaging.Metadata getMetadata()",
                "name": "getMetadata",
                "callSignature": "getMetadata()",
                "comment": "Returns a copy of the metadata associated with this Conversation.  Mutations will not get\napplied without calling putMetadata().",
                "returns": {
                  "description": "the metadata associated with this Conversation",
                  "type": "Metadata"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean isDeliveryReceiptsEnabled()",
                "name": "isDeliveryReceiptsEnabled",
                "callSignature": "isDeliveryReceiptsEnabled()",
                "comment": null,
                "returns": {
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean isDistinct()",
                "name": "isDistinct",
                "callSignature": "isDistinct()",
                "comment": "Returns if the Conversation is `Distinct`.",
                "returns": {
                  "description": "`true` if Conversation is `Distinct`. `false` otherwise.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.lang.Integer getTotalMessageCount()",
                "name": "getTotalMessageCount",
                "callSignature": "getTotalMessageCount()",
                "comment": "Returns the total number of Messages in this Conversation, including historic Messages that\nhave yet to be fetched from the server.",
                "returns": {
                  "description": "",
                  "type": "Integer"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.lang.Integer getTotalUnreadMessageCount()",
                "name": "getTotalUnreadMessageCount",
                "callSignature": "getTotalUnreadMessageCount()",
                "comment": "Returns the total number of unread Messages in this Conversation, including historic Messages\nthat have yet to be fetched from the server.",
                "returns": {
                  "description": "",
                  "type": "Integer"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "Conversation",
          "comment": "The `Conversation` class models a conversations between two or more participants within Layer. A\nconversation is an on-going stream of messages (modeled by the `Message` class) synchronized\namong all participants.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.messaging.Conversation",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [
                  {
                    "declarationSignature": "HistoricSyncStatus(int value)",
                    "name": "HistoricSyncStatus",
                    "callSignature": "HistoricSyncStatus(value)",
                    "comment": null,
                    "throws": [],
                    "parameters": [
                      {
                        "name": "value",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "static": [
                  {
                    "declarationSignature": "public static com.layer.sdk.messaging.Conversation.HistoricSyncStatus fromValue(int value)",
                    "name": "fromValue",
                    "callSignature": "fromValue(value)",
                    "comment": "Helper to convert `int` to `HistoricSyncStatus`",
                    "returns": {
                      "description": "",
                      "type": "HistoricSyncStatus"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "value",
                        "description": "",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "instance": [
                  {
                    "declarationSignature": "public int getValue()",
                    "name": "getValue",
                    "callSignature": "getValue()",
                    "comment": "Helper to convert `HistoricSyncStatus` to `int`",
                    "returns": {
                      "description": "",
                      "type": "int"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "HistoricSyncStatus",
              "comment": "HistoricSyncStatus represents the synchronization status of this Conversation's locally\navailable messages relative to the message history available remotely on the Layer cloud.\nMore message history can be synchronized in from the Layer cloud by calling one of the\n`sync` methods, such as `syncMoreHistoricMessages(int)`.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.messaging.Conversation$HistoricSyncStatus",
              "enumClasses": [],
              "fields": [
                {
                  "name": "MORE_AVAILABLE",
                  "comment": null,
                  "type": "HistoricSyncStatus"
                },
                {
                  "name": "SYNC_PENDING",
                  "comment": null,
                  "type": "HistoricSyncStatus"
                },
                {
                  "name": "NO_MORE_AVAILABLE",
                  "comment": null,
                  "type": "HistoricSyncStatus"
                },
                {
                  "name": "INVALID",
                  "comment": null,
                  "type": "HistoricSyncStatus"
                }
              ],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "Property",
                  "comment": null,
                  "fullname": "com.layer.sdk.query.Queryable$Property"
                }
              ],
              "methods": {
                "constructor": [
                  {
                    "declarationSignature": "Property(boolean sortable, int queryByFlags)",
                    "name": "Property",
                    "callSignature": "Property(sortable, queryByFlags)",
                    "comment": null,
                    "throws": [],
                    "parameters": [
                      {
                        "name": "sortable",
                        "type": "boolean"
                      },
                      {
                        "name": "queryByFlags",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "public boolean isSortable()",
                    "name": "isSortable",
                    "callSignature": "isSortable()",
                    "comment": "Retrieves whether the Property is sortable or not",
                    "returns": {
                      "description": "true when the Property is sortable, false otherwise",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isEqualityQueryable()",
                    "name": "isEqualityQueryable",
                    "callSignature": "isEqualityQueryable()",
                    "comment": "Retrieves whether the Property is comparable by equality or not",
                    "returns": {
                      "description": "whether the Property is comparable by equality or not",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isRelativeQueryable()",
                    "name": "isRelativeQueryable",
                    "callSignature": "isRelativeQueryable()",
                    "comment": "Retrieves whether the Property is comparable by relation or not",
                    "returns": {
                      "description": "whether the Property is comparable by relation or not",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isInclusionQueryable()",
                    "name": "isInclusionQueryable",
                    "callSignature": "isInclusionQueryable()",
                    "comment": "Retrieves whether the Property is comparable by inclusion or not",
                    "returns": {
                      "description": "whether the Property is comparable by inclusion or not",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "Property",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.messaging.Conversation$Property",
              "enumClasses": [],
              "fields": [
                {
                  "name": "ID",
                  "comment": "Conversation unique ID, not sortable and supports comparison by Equality or Inclusion",
                  "type": "Property"
                },
                {
                  "name": "PARTICIPANTS",
                  "comment": "Conversation participants, sortable and supports comparison by Equality or Inclusion",
                  "type": "Property"
                },
                {
                  "name": "PARTICIPANT_COUNT",
                  "comment": "Conversation participants count, including the authenticated user, sortable and supports comparison by Equality, Inclusion or Relation",
                  "type": "Property"
                },
                {
                  "name": "CREATED_AT",
                  "comment": "Timestamp of Conversation creation (epoch time in milliseconds), sortable and supports comparison by Equality, Inclusion or Relation",
                  "type": "Property"
                },
                {
                  "name": "LAST_MESSAGE",
                  "comment": "Last message received on the Conversation, not sortable and supports comparison by Equality or Inclusion",
                  "type": "Property"
                },
                {
                  "name": "HAS_UNREAD_MESSAGES",
                  "comment": "Whether the Conversation has unread messages or not, sortable and supports comparison by Equality",
                  "type": "Property"
                },
                {
                  "name": "LAST_MESSAGE_RECEIVED_AT",
                  "comment": "Timestamp of last message received on the Conversation (epoch time in milliseconds), sortable and supports comparison by Equality, Inclusion or Relation",
                  "type": "Property"
                },
                {
                  "name": "LAST_MESSAGE_SENT_AT",
                  "comment": "Timestamp of last message sent on the Conversation (epoch time in milliseconds), sortable and supports comparison by Equality, Inclusion or Relation",
                  "type": "Property"
                },
                {
                  "name": "IS_DISTINCT",
                  "comment": "Whether the Conversation is distinct or not, not sortable and supports comparison by Equality",
                  "type": "Property"
                },
                {
                  "name": "METADATA",
                  "comment": "Conversation metadata, not sortable and supports comparison by Equality or inclusion.\nCan either pass a {@link Metadata} object or a key-path (e.g. \"first.second\") as the\nvalue. If querying via key-path, the property key must be specified.",
                  "type": "Property"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.messaging.ConversationOptions deliveryReceipts(boolean deliveryReceipts)",
                "name": "deliveryReceipts",
                "callSignature": "deliveryReceipts(deliveryReceipts)",
                "comment": "Enables and disables the automatic generation of delivery receipts for received Messages.\nThe SDK enables delivery receipts by default.  Disabling delivery receipts increases\nperformance, but disables delivery and read receipts.",
                "returns": {
                  "description": "this `Options` object.",
                  "type": "ConversationOptions"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "deliveryReceipts",
                    "description": "`true` to enable delivery receipt generation, or `false` to\n                        disable delivery receipts.",
                    "type": "boolean"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public boolean isDeliveryReceipts()",
                "name": "isDeliveryReceipts",
                "callSignature": "isDeliveryReceipts()",
                "comment": "Returns `true` if this Options has delivery receipts enabled, or `false` if disabled.",
                "returns": {
                  "description": "`true` if this Options has delivery receipts enabled, or `false` if disabled.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.ConversationOptions distinct(boolean conversationIsDistinct)",
                "name": "distinct",
                "callSignature": "distinct(conversationIsDistinct)",
                "comment": "",
                "returns": {
                  "type": "ConversationOptions"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "conversationIsDistinct",
                    "description": "- <code>true</code> by default",
                    "type": "boolean"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public boolean isDistinct()",
                "name": "isDistinct",
                "callSignature": "isDistinct()",
                "comment": "Returns <code>true</code> if Conversation is Distinct option is on",
                "returns": {
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "ConversationOptions",
          "comment": "Conversation.Options provides an optional set of options to apply to a Conversation at\ninstantiation time.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.messaging.ConversationOptions",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [
            {
              "name": "LayerObject",
              "comment": null,
              "fullname": "com.layer.sdk.messaging.LayerObject"
            }
          ],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public abstract java.lang.String getUserId()",
                "name": "getUserId",
                "callSignature": "getUserId()",
                "comment": "Returns the user ID of the Actor.",
                "returns": {
                  "description": "the user ID of the Actor.",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.lang.String getName()",
                "name": "getName",
                "callSignature": "getName()",
                "comment": "Returns the user NAME of the Actor.",
                "returns": {
                  "description": "the NAME of the Actor",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "Actor",
          "comment": "The `Actor` class represents a user or application integration that took a particular action such as sending a message.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.messaging.Actor",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [
            {
              "name": "Message",
              "comment": "The `Message` class represents a message within a conversation (modeled by the `Conversation`\nclass) between two or more participants within Layer.",
              "fullname": "com.layer.sdk.messaging.Message"
            }
          ],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": []
          },
          "name": "Announcement",
          "comment": "The `Announcement` class represents a message outside of a conversation for the user.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.messaging.Announcement",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [
              {
                "declarationSignature": "public static com.layer.sdk.messaging.PushNotificationPayload fromGcmIntentExtras(android.os.Bundle extras)",
                "name": "fromGcmIntentExtras",
                "callSignature": "fromGcmIntentExtras(extras)",
                "comment": "Create a {@link PushNotificationPayload} from a {@link Bundle} received in a GCM intent. This\nis a helper method which allows using an object rather than requiring the fetching of all the\nindividual keys from the Bundle. {@link #getCategory()} and {@link #getApnsData()} on the\nresulting object will always return null as those are iOS only values.",
                "returns": {
                  "description": "a {@link PushNotificationPayload}",
                  "type": "PushNotificationPayload"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "extras",
                    "description": "a Bundle containing the extras received in the GCM intent.",
                    "type": "android.os.Bundle"
                  }
                ],
                "exceptions": []
              }
            ],
            "instance": [
              {
                "declarationSignature": "public java.lang.String getTitle()",
                "name": "getTitle",
                "callSignature": "getTitle()",
                "comment": "Returns the title of the notification.",
                "returns": {
                  "description": "a String, or null",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String getText()",
                "name": "getText",
                "callSignature": "getText()",
                "comment": "Returns the body text of the notification.",
                "returns": {
                  "description": "a String, or null",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String getSound()",
                "name": "getSound",
                "callSignature": "getSound()",
                "comment": "Returns the sound to play when the notification is received.",
                "returns": {
                  "description": "a String, or null",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String getCategory()",
                "name": "getCategory",
                "callSignature": "getCategory()",
                "comment": "Returns the APNS category. Note: This is an iOS only String and will only be used when\nsending a message. It will always be null if this was created with\n{@link #fromGcmIntentExtras(Bundle)}.",
                "returns": {
                  "description": "a String, or null",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String getTitleLocalizationKey()",
                "name": "getTitleLocalizationKey",
                "callSignature": "getTitleLocalizationKey()",
                "comment": "Returns the title used for localization.",
                "returns": {
                  "description": "a String, or null",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String[] getTitleLocalizationArguments()",
                "name": "getTitleLocalizationArguments",
                "callSignature": "getTitleLocalizationArguments()",
                "comment": "Returns an array of Strings to use when replacing format specifiers in the localized title.",
                "returns": {
                  "description": "a String[], or null",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String getLocalizationKey()",
                "name": "getLocalizationKey",
                "callSignature": "getLocalizationKey()",
                "comment": "Returns the body text used for localization.",
                "returns": {
                  "description": "a String, or null",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String[] getLocalizationArguments()",
                "name": "getLocalizationArguments",
                "callSignature": "getLocalizationArguments()",
                "comment": "Returns an array of Strings to use when replacing format specifiers in the localized body\ntext.",
                "returns": {
                  "description": "a String[], or null",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.util.Map getData()",
                "name": "getData",
                "callSignature": "getData()",
                "comment": "Returns additional key-value pairs in the notification.",
                "returns": {
                  "description": "a Map, or null",
                  "type": "Map"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.util.Map getApnsData()",
                "name": "getApnsData",
                "callSignature": "getApnsData()",
                "comment": "Returns iOS specific key-value pairs in the notification, such as `launch-image`. See the\nAPNS documentation for more information. Note: This is an iOS only Map and will only be used\nwhen sending a message. It will always be null if this was created with\n{@link #fromGcmIntentExtras(Bundle)}.",
                "returns": {
                  "description": "a Map, or null",
                  "type": "Map"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String toString()",
                "name": "toString",
                "callSignature": "toString()",
                "comment": null,
                "returns": {
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "PushNotificationPayload",
          "comment": "Represents a payload that is sent with a message through {@link MessageOptions} or received in\na push notification from GCM.",
          "nestedClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "public com.layer.sdk.messaging.PushNotificationPayload.Builder title(java.lang.String title)",
                    "name": "title",
                    "callSignature": "title(title)",
                    "comment": "Set the title used in the notification.",
                    "returns": {
                      "description": "This Builder object for method chaining",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "title",
                        "type": "String"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.messaging.PushNotificationPayload.Builder text(java.lang.String text)",
                    "name": "text",
                    "callSignature": "text(text)",
                    "comment": "Set the body text used in the notification.",
                    "returns": {
                      "description": "This Builder object for method chaining",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "text",
                        "type": "String"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.messaging.PushNotificationPayload.Builder sound(java.lang.String sound)",
                    "name": "sound",
                    "callSignature": "sound(sound)",
                    "comment": "Set the sound name to play when the notification is received.",
                    "returns": {
                      "description": "This Builder object for method chaining",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "sound",
                        "type": "String"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.messaging.PushNotificationPayload.Builder category(java.lang.String category)",
                    "name": "category",
                    "callSignature": "category(category)",
                    "comment": "Set the APNS category for the notification.",
                    "returns": {
                      "description": "This Builder object for method chaining",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "category",
                        "type": "String"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.messaging.PushNotificationPayload.Builder titleLocalization(java.lang.String key, java.lang.String... args)",
                    "name": "titleLocalization",
                    "callSignature": "titleLocalization(key, args)",
                    "comment": "Set the key and arguments to be used for title localization.",
                    "returns": {
                      "description": "This Builder object for method chaining",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "key",
                        "description": "a String key used to look up the localized string in the app's resources",
                        "type": "String"
                      },
                      {
                        "name": "args",
                        "description": "Strings used to replace format specifiers",
                        "type": "String"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.messaging.PushNotificationPayload.Builder localization(java.lang.String key, java.lang.String... args)",
                    "name": "localization",
                    "callSignature": "localization(key, args)",
                    "comment": "Set the key and arguments to be used for body text localization.",
                    "returns": {
                      "description": "This Builder object for method chaining",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "key",
                        "description": "a String key used to look up the localized string in the app's resources",
                        "type": "String"
                      },
                      {
                        "name": "args",
                        "description": "Strings used to replace format specifiers",
                        "type": "String"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.messaging.PushNotificationPayload.Builder data(java.util.Map data)",
                    "name": "data",
                    "callSignature": "data(data)",
                    "comment": "Set the extra payload data to be sent with the notification.",
                    "returns": {
                      "description": "This Builder object for method chaining",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "data",
                        "type": "Map"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.messaging.PushNotificationPayload.Builder apnsData(java.util.Map apnsData)",
                    "name": "apnsData",
                    "callSignature": "apnsData(apnsData)",
                    "comment": "Set the APNS payload data to be sent with the notification (e.g. `launch-image`).",
                    "returns": {
                      "description": "This Builder object for method chaining",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "apnsData",
                        "type": "Map"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.messaging.PushNotificationPayload build()",
                    "name": "build",
                    "callSignature": "build()",
                    "comment": "Create a {@link PushNotificationPayload} from this Builder.",
                    "returns": {
                      "description": "a {@link PushNotificationPayload}",
                      "type": "PushNotificationPayload"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "Builder",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.messaging.PushNotificationPayload$Builder",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            }
          ],
          "fullname": "com.layer.sdk.messaging.PushNotificationPayload",
          "enumClasses": [],
          "fields": [
            {
              "name": "KEY_TITLE",
              "comment": "Notification title",
              "type": "String"
            },
            {
              "name": "KEY_TEXT",
              "comment": "Notification body text",
              "type": "String"
            },
            {
              "name": "KEY_SOUND",
              "comment": "Sound to play when the device receives the notification",
              "type": "String"
            },
            {
              "name": "KEY_TITLE_LOC_KEY",
              "comment": "Key to the title string for localization",
              "type": "String"
            },
            {
              "name": "KEY_TITLE_LOC_ARGS",
              "comment": "String values to replace format specifiers in the title string for localization",
              "type": "String"
            },
            {
              "name": "KEY_LOC_KEY",
              "comment": "Key to the body string for localization",
              "type": "String"
            },
            {
              "name": "KEY_LOC_ARGS",
              "comment": "String values to replace format specifiers in the body string for localization",
              "type": "String"
            },
            {
              "name": "KEY_DATA",
              "comment": "Additional key-value pairs in the notification payload",
              "type": "String"
            }
          ],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [
            {
              "name": "LayerObject",
              "comment": null,
              "fullname": "com.layer.sdk.messaging.LayerObject"
            },
            {
              "name": "Queryable",
              "comment": "Objects with Query support declare so on a per attribute basis by implementing this `Queryable`\ninterface.  Not all operators are available for each `Queryable` attribute. Consult the\ndocumentation on each property for details about querying semantics.",
              "fullname": "com.layer.sdk.query.Queryable"
            }
          ],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public abstract android.net.Uri getId()",
                "name": "getId",
                "callSignature": "getId()",
                "comment": "A unique identifier for this MessagePart.",
                "returns": {
                  "description": "a unique identifier for this MessagePart.",
                  "type": "android.net.Uri"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.messaging.Message getMessage()",
                "name": "getMessage",
                "callSignature": "getMessage()",
                "comment": "The parent Message object this MessagePart belongs to.",
                "returns": {
                  "description": "the parent Message this MessagePart belongs to.",
                  "type": "Message"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.lang.String getMimeType()",
                "name": "getMimeType",
                "callSignature": "getMimeType()",
                "comment": "The MIME type of the content contained in the data portion of this MessagePart, set\nby the Application when the MessagePart is created.",
                "returns": {
                  "description": "the MIME type of the content contained in the data portion of this MessagePart.",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract byte[] getData()",
                "name": "getData",
                "callSignature": "getData()",
                "comment": "The content of the MessagePart as a byte array",
                "returns": {
                  "description": "a byte array of data representing the payload of this MessagePart.",
                  "type": "byte"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract java.io.InputStream getDataStream()",
                "name": "getDataStream",
                "callSignature": "getDataStream()",
                "comment": "The content of this MessagePart as a stream",
                "returns": {
                  "description": "a stream of the payload of this MessagePart",
                  "type": "InputStream"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract long getSize()",
                "name": "getSize",
                "callSignature": "getSize()",
                "comment": "",
                "returns": {
                  "description": "The size of the data in this message part in bytes",
                  "type": "long"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.messaging.MessagePart.TransferStatus getTransferStatus()",
                "name": "getTransferStatus",
                "callSignature": "getTransferStatus()",
                "comment": "",
                "returns": {
                  "description": "The Transfer Status for the data in this message part to see if the this",
                  "type": "TransferStatus"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void download(com.layer.sdk.listeners.LayerProgressListener listener)",
                "name": "download",
                "callSignature": "download(listener)",
                "comment": "Trigger the download of the data for a particular message part. If invoked on a message with\ndata already locally available, it will be returned in the listener callback immediately.\n\nNote: use LayerProgressListener.WeakReference if you do not intend to unregister the listener\nfrom the LayerClient and want the listener to get garbage collected when external references\ngo away.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "listener",
                    "description": "Invoked with progress and the results.",
                    "type": "LayerProgressListener"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract boolean isContentReady()",
                "name": "isContentReady",
                "callSignature": "isContentReady()",
                "comment": "Check whether the content for this message part has been fully downloaded. If not\nsee {@link #download(com.layer.sdk.listeners.LayerProgressListener)}",
                "returns": {
                  "description": "Whether the message has local content.",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void deleteLocalContent()",
                "name": "deleteLocalContent",
                "callSignature": "deleteLocalContent()",
                "comment": "Deletes the locally stored data to free up disk space. This does not delete the data on the\nserver side.  The content can be downloaded again later by calling {@link #download(com.layer.sdk.listeners.LayerProgressListener)}.\nData smaller than 2KB is never deleted locally.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "MessagePart",
          "comment": "The `MessagePart` class represents a piece of content embedded within a containing\nMessage. Each part has a specific MIME type identifying the type of content it contains.\nMessages may contain an arbitrary number of parts with any MIME type that the application\nwishes to support.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.messaging.MessagePart",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [
                  {
                    "declarationSignature": "TransferStatus(int value)",
                    "name": "TransferStatus",
                    "callSignature": "TransferStatus(value)",
                    "comment": null,
                    "throws": [],
                    "parameters": [
                      {
                        "name": "value",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "static": [
                  {
                    "declarationSignature": "public static com.layer.sdk.messaging.MessagePart.TransferStatus fromOrdinal(int ordinal)",
                    "name": "fromOrdinal",
                    "callSignature": "fromOrdinal(ordinal)",
                    "comment": null,
                    "returns": {
                      "type": "TransferStatus"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "ordinal",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "instance": [
                  {
                    "declarationSignature": "public int getValue()",
                    "name": "getValue",
                    "callSignature": "getValue()",
                    "comment": null,
                    "returns": {
                      "type": "int"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "TransferStatus",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.messaging.MessagePart$TransferStatus",
              "enumClasses": [],
              "fields": [
                {
                  "name": "AWAITING_UPLOAD",
                  "comment": "Content is available locally but has not been uploaded.\nThis state is expected before the message is sent.",
                  "type": "TransferStatus"
                },
                {
                  "name": "UPLOADING",
                  "comment": "Content is available locally and is in a state of uploading.\nThis state is expected when message is in the sending process.",
                  "type": "TransferStatus"
                },
                {
                  "name": "READY_FOR_DOWNLOAD",
                  "comment": "Content is not available locally but it is ready for download.\nThis state is expected when message part didn't met the criteria to be auto-downloaded.\nUse `downloadContent` to initiate a manual download process.",
                  "type": "TransferStatus"
                },
                {
                  "name": "DOWNLOADING",
                  "comment": "Content is not yet available locally and is in a state of downloading.\nThis state is expected when message part downloaded was started manually or by\nusing the auto-download feature.",
                  "type": "TransferStatus"
                },
                {
                  "name": "COMPLETE",
                  "comment": "Content is available locally and on the server.\nThis is the expected state when the (upload or download) transfer completes.",
                  "type": "TransferStatus"
                }
              ],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [
                {
                  "name": "Property",
                  "comment": null,
                  "fullname": "com.layer.sdk.query.Queryable$Property"
                }
              ],
              "methods": {
                "constructor": [
                  {
                    "declarationSignature": "Property(boolean sortable, int queryByFlags)",
                    "name": "Property",
                    "callSignature": "Property(sortable, queryByFlags)",
                    "comment": null,
                    "throws": [],
                    "parameters": [
                      {
                        "name": "sortable",
                        "type": "boolean"
                      },
                      {
                        "name": "queryByFlags",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "public boolean isSortable()",
                    "name": "isSortable",
                    "callSignature": "isSortable()",
                    "comment": "Retrieves whether the Property is sortable or not",
                    "returns": {
                      "description": "true when the Property is sortable, false otherwise",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isEqualityQueryable()",
                    "name": "isEqualityQueryable",
                    "callSignature": "isEqualityQueryable()",
                    "comment": "Retrieves whether the Property is comparable by equality or not",
                    "returns": {
                      "description": "whether the Property is comparable by equality or not",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isRelativeQueryable()",
                    "name": "isRelativeQueryable",
                    "callSignature": "isRelativeQueryable()",
                    "comment": "Retrieves whether the Property is comparable by relation or not",
                    "returns": {
                      "description": "whether the Property is comparable by relation or not",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public boolean isInclusionQueryable()",
                    "name": "isInclusionQueryable",
                    "callSignature": "isInclusionQueryable()",
                    "comment": "Retrieves whether the Property is comparable by inclusion or not",
                    "returns": {
                      "description": "whether the Property is comparable by inclusion or not",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "Property",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.messaging.MessagePart$Property",
              "enumClasses": [],
              "fields": [
                {
                  "name": "ID",
                  "comment": "Message part's unique ID, not sortable and supports comparison by Equality or Inclusion",
                  "type": "Property"
                },
                {
                  "name": "INDEX",
                  "comment": "Message part's index in the Message, sortable and supports comparison by Equality, Inclusion or Relation",
                  "type": "Property"
                },
                {
                  "name": "TRANSFER_STATUS",
                  "comment": "Transfer status, sortable and supports comparison by Equality, Inclusion or Relation",
                  "type": "Property"
                },
                {
                  "name": "MESSAGE",
                  "comment": "Parent Message that this part belongs to, supports comparison by Equality or Inclusion",
                  "type": "Property"
                },
                {
                  "name": "MIME_TYPE",
                  "comment": "Mime type of the message part, supports comparison by Equality or Inclusion",
                  "type": "Property"
                },
                {
                  "name": "SIZE",
                  "comment": "Size of the message part, supports comparison by Equality or Inclusion",
                  "type": "Property"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.messaging.MessageOptions defaultPushNotificationPayload(com.layer.sdk.messaging.PushNotificationPayload payload)",
                "name": "defaultPushNotificationPayload",
                "callSignature": "defaultPushNotificationPayload(payload)",
                "comment": "Sets the PushNotificationPayload to be used for all recipients. Null can be passed to\nremove this payload.",
                "returns": {
                  "description": "This MessageOptions for chaining",
                  "type": "MessageOptions"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "payload",
                    "description": "a {@link PushNotificationPayload}, or null",
                    "type": "PushNotificationPayload"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.MessageOptions userPushNotificationPayload(java.lang.String userId, com.layer.sdk.messaging.PushNotificationPayload payload)",
                "name": "userPushNotificationPayload",
                "callSignature": "userPushNotificationPayload(userId, payload)",
                "comment": "Adds a PushNotificationPayload for a given user. Null can be passed for the\nPushNotificationPayload to remove it from the user. If a value is not set in this\nper-user PushNotificationPayload, the value in the default's PushNotificationPayload will\nbe used, if set.",
                "returns": {
                  "description": "This MessageOptions for chaining",
                  "type": "MessageOptions"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "userId",
                    "description": "a String representing the user's ID",
                    "type": "String"
                  },
                  {
                    "name": "payload",
                    "description": "a {@link PushNotificationPayload}, or null",
                    "type": "PushNotificationPayload"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.MessageOptions userPushNotificationPayloads(java.util.Map payloads)",
                "name": "userPushNotificationPayloads",
                "callSignature": "userPushNotificationPayloads(payloads)",
                "comment": "Adds all user/PushNotificationPayload key/value pairs. If a PushNotificationPayload for a\nuser has already been set then it will be overridden with the new value. If a value is not\nset in this per-user PushNotificationPayload, the value in the default's\nPushNotificationPayload will be used, if set.",
                "returns": {
                  "description": "This MessageOptions for chaining",
                  "type": "MessageOptions"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "payloads",
                    "description": "a Map containing user ID and {@link PushNotificationPayload} key/values",
                    "type": "Map"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.PushNotificationPayload getDefaultPushNotificationPayload()",
                "name": "getDefaultPushNotificationPayload",
                "callSignature": "getDefaultPushNotificationPayload()",
                "comment": "Returns the PushNotificationPayload that is used for all recipient, or null if no default\nPushNotificationPayload has been set.",
                "returns": {
                  "description": "a {@link PushNotificationPayload}, or null",
                  "type": "PushNotificationPayload"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.messaging.PushNotificationPayload getUserPushNotificationPayload(java.lang.String userId)",
                "name": "getUserPushNotificationPayload",
                "callSignature": "getUserPushNotificationPayload(userId)",
                "comment": "Returns the PushNotificationPayload that is used for the specified user, or null if it has\nnot been set. This does not include any default values that were set through\n{@link #defaultPushNotificationPayload(PushNotificationPayload)}",
                "returns": {
                  "description": "a {@link PushNotificationPayload}, or null",
                  "type": "PushNotificationPayload"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "userId",
                    "description": "a String representing the user's ID",
                    "type": "String"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.util.Map getUserPushNotificationPayloads()",
                "name": "getUserPushNotificationPayloads",
                "callSignature": "getUserPushNotificationPayloads()",
                "comment": "Returns all the PushNotificationPayloads that have been added for specific users, or null if\nnone have been added. This does not include any default values that were set through\n{@link #defaultPushNotificationPayload(PushNotificationPayload)}",
                "returns": {
                  "description": "a Map containing user ID/{@link PushNotificationPayload} key/value pairs, or null.",
                  "type": "Map"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "MessageOptions",
          "comment": "MessageOptions provides an optional set of options to apply to a Message at\ninstantiation time.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.messaging.MessageOptions",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": []
        }
      ],
      "name": "com.layer.sdk.messaging"
    },
    {
      "classes": [
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [
              {
                "declarationSignature": "public static com.layer.sdk.policy.Policy.Builder builder(com.layer.sdk.policy.Policy.PolicyType type)",
                "name": "builder",
                "callSignature": "builder(type)",
                "comment": null,
                "returns": {
                  "type": "Builder"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "type",
                    "type": "PolicyType"
                  }
                ],
                "exceptions": []
              }
            ],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.policy.Policy.PolicyType getPolicyType()",
                "name": "getPolicyType",
                "callSignature": "getPolicyType()",
                "comment": null,
                "returns": {
                  "type": "PolicyType"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String getSentByUserID()",
                "name": "getSentByUserID",
                "callSignature": "getSentByUserID()",
                "comment": "Specifies the sender of the content that the policy applies to. If `nil`, the policy applies to all senders.",
                "returns": {
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public boolean equals(java.lang.Object o)",
                "name": "equals",
                "callSignature": "equals(o)",
                "comment": null,
                "returns": {
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "o",
                    "type": "Object"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public int hashCode()",
                "name": "hashCode",
                "callSignature": "hashCode()",
                "comment": null,
                "returns": {
                  "type": "int"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "Policy",
          "comment": "The `Policy` object defines a policy that governs how communications destined for a given target user\nwill be routed within Layer.\nIt is important that you configure your `Policy` object appropriately before adding it\nto a client. Layer client objects make a copy of the policy you provide and use the copy for evaluation\nand enforcement. The policy objects maintained by the client are immutable and cannot be reconfigured.\nIf you need to modify a policy, then you must make a copy of it, apply the appropriate changes, add the\nupdated policy object to the client and remove the original policy (if appropriate).",
          "nestedClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [
                  {
                    "declarationSignature": "public Builder(com.layer.sdk.policy.Policy.PolicyType type)",
                    "name": "Builder",
                    "callSignature": "Builder(type)",
                    "comment": null,
                    "throws": [],
                    "parameters": [
                      {
                        "name": "type",
                        "type": "PolicyType"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "public com.layer.sdk.policy.Policy.Builder sentByUserId(java.lang.String sentByUserId)",
                    "name": "sentByUserId",
                    "callSignature": "sentByUserId(sentByUserId)",
                    "comment": null,
                    "returns": {
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "sentByUserId",
                        "type": "String"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.policy.Policy build()",
                    "name": "build",
                    "callSignature": "build()",
                    "comment": null,
                    "returns": {
                      "type": "Policy"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "Builder",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.policy.Policy$Builder",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            }
          ],
          "fullname": "com.layer.sdk.policy.Policy",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "PolicyType",
              "comment": "The `PolicyType` enumeration defines the types of policies that can be defined to govern communications within Layer.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.policy.Policy$PolicyType",
              "enumClasses": [],
              "fields": [
                {
                  "name": "BLOCK",
                  "comment": "Defines a policy which will block a matching entity from communicating with the target.",
                  "type": "PolicyType"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": []
        }
      ],
      "name": "com.layer.sdk.policy"
    },
    {
      "classes": [
        {
          "implementedInterfaces": [],
          "generics": [
            "Tquery"
          ],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": []
          },
          "name": "RecyclerViewController",
          "comment": "RecyclerViewController can be used to drive a RecyclerView.Adapter from a Query.  This controller\nattaches itself to a LayerClient and automatically generates callbacks for notifying a\nRecyclerView.Adapter about UI updates.",
          "nestedClasses": [
            {
              "implementedInterfaces": [],
              "generics": [
                "Tquery"
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "void onQueryDataSetChanged(com.layer.sdk.query.RecyclerViewController controller)",
                    "name": "onQueryDataSetChanged",
                    "callSignature": "onQueryDataSetChanged(controller)",
                    "comment": "Alerts the observer that the underlying dataset totally changed and should be rebound.",
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "controller",
                        "description": "the RecyclerViewController which generated this callback.",
                        "type": "RecyclerViewController"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "void onQueryItemChanged(com.layer.sdk.query.RecyclerViewController controller, int position)",
                    "name": "onQueryItemChanged",
                    "callSignature": "onQueryItemChanged(controller, position)",
                    "comment": "Alerts the observer that the content of a given item changed.",
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "controller",
                        "description": "the RecyclerViewController which generated this callback.",
                        "type": "RecyclerViewController"
                      },
                      {
                        "name": "position",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "void onQueryItemRangeChanged(com.layer.sdk.query.RecyclerViewController controller, int positionStart, int itemCount)",
                    "name": "onQueryItemRangeChanged",
                    "callSignature": "onQueryItemRangeChanged(controller, positionStart, itemCount)",
                    "comment": "Alerts the observer that the content of a range of items changed.",
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "controller",
                        "description": "the RecyclerViewController which generated this callback.",
                        "type": "RecyclerViewController"
                      },
                      {
                        "name": "positionStart",
                        "type": "int"
                      },
                      {
                        "name": "itemCount",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "void onQueryItemInserted(com.layer.sdk.query.RecyclerViewController controller, int position)",
                    "name": "onQueryItemInserted",
                    "callSignature": "onQueryItemInserted(controller, position)",
                    "comment": "Alerts the observer that an item was inserted.",
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "controller",
                        "description": "the RecyclerViewController which generated this callback.",
                        "type": "RecyclerViewController"
                      },
                      {
                        "name": "position",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "void onQueryItemRangeInserted(com.layer.sdk.query.RecyclerViewController controller, int positionStart, int itemCount)",
                    "name": "onQueryItemRangeInserted",
                    "callSignature": "onQueryItemRangeInserted(controller, positionStart, itemCount)",
                    "comment": "Alerts the observer that a range of items was inserted.",
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "controller",
                        "description": "the RecyclerViewController which generated this callback.",
                        "type": "RecyclerViewController"
                      },
                      {
                        "name": "positionStart",
                        "type": "int"
                      },
                      {
                        "name": "itemCount",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "void onQueryItemRemoved(com.layer.sdk.query.RecyclerViewController controller, int position)",
                    "name": "onQueryItemRemoved",
                    "callSignature": "onQueryItemRemoved(controller, position)",
                    "comment": "Alerts the observer that an item was removed.",
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "controller",
                        "description": "the RecyclerViewController which generated this callback.",
                        "type": "RecyclerViewController"
                      },
                      {
                        "name": "position",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "void onQueryItemRangeRemoved(com.layer.sdk.query.RecyclerViewController controller, int positionStart, int itemCount)",
                    "name": "onQueryItemRangeRemoved",
                    "callSignature": "onQueryItemRangeRemoved(controller, positionStart, itemCount)",
                    "comment": "Alerts the observer that a range of items was removed.",
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "controller",
                        "description": "the RecyclerViewController which generated this callback.",
                        "type": "RecyclerViewController"
                      },
                      {
                        "name": "positionStart",
                        "type": "int"
                      },
                      {
                        "name": "itemCount",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "void onQueryItemMoved(com.layer.sdk.query.RecyclerViewController controller, int fromPosition, int toPosition)",
                    "name": "onQueryItemMoved",
                    "callSignature": "onQueryItemMoved(controller, fromPosition, toPosition)",
                    "comment": "Alerts the observer that an item moved.",
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "controller",
                        "description": "the RecyclerViewController which generated this callback.",
                        "type": "RecyclerViewController"
                      },
                      {
                        "name": "fromPosition",
                        "type": "int"
                      },
                      {
                        "name": "toPosition",
                        "type": "int"
                      }
                    ],
                    "exceptions": []
                  }
                ]
              },
              "name": "Callback",
              "comment": "The RecyclerViewController.Callback is designed to drive a RecyclerView.Adapter.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.query.RecyclerViewController$Callback",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            }
          ],
          "fullname": "com.layer.sdk.query.RecyclerViewController",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [],
          "generics": [
            "Tquery"
          ],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public abstract com.layer.sdk.query.ListViewController execute()",
                "name": "execute",
                "callSignature": "execute()",
                "comment": "Executes the underlying Query and performs a full UI refresh via onQueryDataSetChanged.",
                "returns": {
                  "type": "ListViewController"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.query.ListViewController setQuery(com.layer.sdk.query.Query query)",
                "name": "setQuery",
                "callSignature": "setQuery(query)",
                "comment": "Updates the underlying Query and performs a refresh.",
                "returns": {
                  "type": "ListViewController"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "query",
                    "type": "Query"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract int getItemCount()",
                "name": "getItemCount",
                "callSignature": "getItemCount()",
                "comment": "Returns the current item count.",
                "returns": {
                  "description": "the current item count.",
                  "type": "int"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract Tquery getItem(int position)",
                "name": "getItem",
                "callSignature": "getItem(position)",
                "comment": "Returns the Queryable item at the given position.",
                "returns": {
                  "description": "The item at the given position.",
                  "type": "Tquery"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "position",
                    "description": "The position of the item to return.",
                    "type": "int"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract android.net.Uri getItemId(int position)",
                "name": "getItemId",
                "callSignature": "getItemId(position)",
                "comment": "Returns the identifier of the Queryable item at the given position.",
                "returns": {
                  "description": "The item identifier at the given position.",
                  "type": "android.net.Uri"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "position",
                    "description": "The position of the item identifier to return.",
                    "type": "int"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract int getPosition(Tquery queryable)",
                "name": "getPosition",
                "callSignature": "getPosition(queryable)",
                "comment": "Returns the position of the given Queryable within the RecyclerViewController's collection,\nor -1 if it is not contained.  This currently performs an O(n) search.",
                "returns": {
                  "description": "The position of the Queryable within this controller's collection, or -1 if it is\nnot in the collection.",
                  "type": "int"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "queryable",
                    "description": "The Queryable item to find the position of.",
                    "type": "Tquery"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract int getPosition(Tquery queryable, int lastPosition)",
                "name": "getPosition",
                "callSignature": "getPosition(queryable, lastPosition)",
                "comment": "Returns the position of the given Queryable within the RecyclerViewController's collection,\nor -1 if it is not contained.  Use this method instead of #getPosition(Tquery) when a\nlast position of the Queryable is known to potentially reduce search effort.",
                "returns": {
                  "description": "The position of the Queryable within this controller's collection, or -1 if it is\nnot in the collection.",
                  "type": "int"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "queryable",
                    "description": "The Queryable item to find the position of.",
                    "type": "Tquery"
                  },
                  {
                    "name": "lastPosition",
                    "description": "The last known position of the Queryable.",
                    "type": "int"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract void updateBoundPosition(int position)",
                "name": "updateBoundPosition",
                "callSignature": "updateBoundPosition(position)",
                "comment": "Call this method when a `View` is being bound by its adapter (e.g. `onBindViewHolder()`) to\npre-cache items around the given position.  For smoothest scrolling, set a\n`PreProcessCallback` and parse item contents prior to binding.",
                "returns": {
                  "type": "void"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "position",
                    "description": "Position being bound.",
                    "type": "int"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public abstract com.layer.sdk.query.ListViewController setPreProcessCallback(com.layer.sdk.query.ListViewController.PreProcessCallback callback)",
                "name": "setPreProcessCallback",
                "callSignature": "setPreProcessCallback(callback)",
                "comment": "Sets an optional callback for pre-processing item content on a background thread.  Use this\ncallback if processing item content (e.g. `MessagePart` data or `Metadata`) take time, and\nyou maintain a parsed content cache (e.g. LRU cache keyed by ID).",
                "returns": {
                  "description": "This `ListViewController`.",
                  "type": "ListViewController"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "callback",
                    "description": "Callback to handle pre-caching, called on a background thread.",
                    "type": "PreProcessCallback"
                  }
                ],
                "exceptions": []
              }
            ]
          },
          "name": "ListViewController",
          "comment": "ListViewController can be used to drive a ListAdapter from a Query.  This controller\nattaches itself to a LayerClient and automatically generates callbacks for notifying a\nListAdapter about UI updates.",
          "nestedClasses": [
            {
              "implementedInterfaces": [],
              "generics": [
                "Tquery"
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "void onQueryDataSetChanged(com.layer.sdk.query.ListViewController controller)",
                    "name": "onQueryDataSetChanged",
                    "callSignature": "onQueryDataSetChanged(controller)",
                    "comment": "Alerts the observer that the underlying dataset totally changed and should be rebound.",
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "controller",
                        "description": "the ListViewController which generated this callback.",
                        "type": "ListViewController"
                      }
                    ],
                    "exceptions": []
                  }
                ]
              },
              "name": "Callback",
              "comment": "The ListViewController.Callback is designed to drive a BaseAdapter.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.query.ListViewController$Callback",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [],
              "generics": [
                "Tquery"
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "void onCache(com.layer.sdk.query.ListViewController controller, Tquery item)",
                    "name": "onCache",
                    "callSignature": "onCache(controller, item)",
                    "comment": null,
                    "returns": {
                      "type": "void"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "controller",
                        "type": "ListViewController"
                      },
                      {
                        "name": "item",
                        "type": "Tquery"
                      }
                    ],
                    "exceptions": []
                  }
                ]
              },
              "name": "PreProcessCallback",
              "comment": "`PreProcessCallback` is intended to improve the user experience when items in this controller\nneed parsing prior to binding with a `View`.  When `updateBoundPosition(int)` is called, a\nbackground thread fetches items above and below the provided position for pre-caching.  Newly\nfetched items are supplied to `onCache()` calls, where the item's content (e.g. `MessagePart`\nor `Metadata`) can be parsed and cached for future `View` binding.\n\nThis callback is not guaranteed to get called prior to binding when scrolling quickly or when\n`updateBoundPosition(int)` is not called.\n\nLarge parsing tasks should be kicked off on other threads, as binding does not block on this\ncallback.  When using such a cache, view binding must gracefully handle incomplete parsing.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.query.ListViewController$PreProcessCallback",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            }
          ],
          "fullname": "com.layer.sdk.query.ListViewController",
          "enumClasses": [],
          "fields": [],
          "derivedClasses": [
            {
              "generics": [
                "Tquery"
              ],
              "name": "RecyclerViewController",
              "comment": "RecyclerViewController can be used to drive a RecyclerView.Adapter from a Query.  This controller\nattaches itself to a LayerClient and automatically generates callbacks for notifying a\nRecyclerView.Adapter about UI updates.",
              "fullname": "com.layer.sdk.query.RecyclerViewController"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [
              {
                "declarationSignature": "public CompoundPredicate(com.layer.sdk.query.CompoundPredicate.Type type, java.util.List subPredicates)",
                "name": "CompoundPredicate",
                "callSignature": "CompoundPredicate(type, subPredicates)",
                "comment": "Creates and returns a new compound predicate with the given type and subpredicates in a given array.",
                "throws": [],
                "parameters": [
                  {
                    "name": "type",
                    "description": "Compound predicate type for the logical relation between sub-predicates",
                    "type": "Type"
                  },
                  {
                    "name": "subPredicates",
                    "description": "A list of `Predicate` instances that compose this `CompoundPredicate`.",
                    "type": "List"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public CompoundPredicate(com.layer.sdk.query.CompoundPredicate.Type type, com.layer.sdk.query.Predicate... subPredicates)",
                "name": "CompoundPredicate",
                "callSignature": "CompoundPredicate(type, subPredicates)",
                "comment": null,
                "throws": [],
                "parameters": [
                  {
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "name": "subPredicates",
                    "type": "Predicate"
                  }
                ],
                "exceptions": []
              }
            ],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.query.CompoundPredicate.Type getType()",
                "name": "getType",
                "callSignature": "getType()",
                "comment": "Retrieves the type for the logical relation between sub-predicates",
                "returns": {
                  "description": "type for the logical relation between sub-predicates",
                  "type": "Type"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.util.List getSubPredicates()",
                "name": "getSubPredicates",
                "callSignature": "getSubPredicates()",
                "comment": "Retrieves the list of `Predicate` objects that comprise this `CompoundPredicate`",
                "returns": {
                  "description": "list of `Predicate` objects that comprise this `CompoundPredicate`",
                  "type": "List"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "CompoundPredicate",
          "comment": "The `CompoundPredicate` class is a subclass of `Predicate` that provides support for combining\nmultiple sub-predicates into a grouping with a conjunction operator such as\n`And`, `Or`, or `Not`.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.query.CompoundPredicate",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Type",
              "comment": "The `Type` enumeration defines the set of comparison operators available for use by\n`Predicate` objects.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.query.CompoundPredicate$Type",
              "enumClasses": [],
              "fields": [
                {
                  "name": "AND",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "OR",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "NOT",
                  "comment": null,
                  "type": "Type"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [],
            "static": [],
            "instance": [
              {
                "declarationSignature": "android.net.Uri getId()",
                "name": "getId",
                "callSignature": "getId()",
                "comment": "Retrieves the unique id of this `Queryable` object",
                "returns": {
                  "description": "the unique id of this `Queryable` object",
                  "type": "android.net.Uri"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "Queryable",
          "comment": "Objects with Query support declare so on a per attribute basis by implementing this `Queryable`\ninterface.  Not all operators are available for each `Queryable` attribute. Consult the\ndocumentation on each property for details about querying semantics.",
          "nestedClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "boolean isSortable()",
                    "name": "isSortable",
                    "callSignature": "isSortable()",
                    "comment": "Retrieves whether the results of the query are sortable or not",
                    "returns": {
                      "description": "true if the query results are sortable, false otherwise",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "boolean isEqualityQueryable()",
                    "name": "isEqualityQueryable",
                    "callSignature": "isEqualityQueryable()",
                    "comment": "Retrieves whether the query compares objects by equality",
                    "returns": {
                      "description": "true if the query compares by equality, false otherwise",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "boolean isRelativeQueryable()",
                    "name": "isRelativeQueryable",
                    "callSignature": "isRelativeQueryable()",
                    "comment": "Retrieves whether the query compares objects by relation between objects",
                    "returns": {
                      "description": "true if the query compares by relation between objects, false otherwise",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "boolean isInclusionQueryable()",
                    "name": "isInclusionQueryable",
                    "callSignature": "isInclusionQueryable()",
                    "comment": "Retrieves whether the query compares objects by inclusion in a set",
                    "returns": {
                      "description": "true if the query compares by inclusion, false otherwise",
                      "type": "boolean"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "Property",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.query.Queryable$Property",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": [
                {
                  "name": "Property",
                  "comment": null,
                  "fullname": "com.layer.sdk.messaging.Conversation$Property"
                },
                {
                  "name": "Property",
                  "comment": "Enumerated properties that can be used to run queries on the Message object",
                  "fullname": "com.layer.sdk.messaging.Message$Property"
                },
                {
                  "name": "Property",
                  "comment": null,
                  "fullname": "com.layer.sdk.messaging.MessagePart$Property"
                }
              ]
            }
          ],
          "fullname": "com.layer.sdk.query.Queryable",
          "enumClasses": [],
          "fields": [
            {
              "name": "BY_EQUALITY",
              "comment": null,
              "type": "int"
            },
            {
              "name": "BY_INCLUSION",
              "comment": null,
              "type": "int"
            },
            {
              "name": "BY_RELATIVE",
              "comment": null,
              "type": "int"
            }
          ],
          "derivedClasses": [
            {
              "name": "MessagePart",
              "comment": "The `MessagePart` class represents a piece of content embedded within a containing\nMessage. Each part has a specific MIME type identifying the type of content it contains.\nMessages may contain an arbitrary number of parts with any MIME type that the application\nwishes to support.",
              "fullname": "com.layer.sdk.messaging.MessagePart"
            },
            {
              "name": "Message",
              "comment": "The `Message` class represents a message within a conversation (modeled by the `Conversation`\nclass) between two or more participants within Layer.",
              "fullname": "com.layer.sdk.messaging.Message"
            },
            {
              "name": "Announcement",
              "comment": "The `Announcement` class represents a message outside of a conversation for the user.",
              "fullname": "com.layer.sdk.messaging.Announcement"
            },
            {
              "name": "Conversation",
              "comment": "The `Conversation` class models a conversations between two or more participants within Layer. A\nconversation is an on-going stream of messages (modeled by the `Message` class) synchronized\namong all participants.",
              "fullname": "com.layer.sdk.messaging.Conversation"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [
              {
                "declarationSignature": "public SortDescriptor(com.layer.sdk.query.Queryable.Property property, com.layer.sdk.query.SortDescriptor.Order order)",
                "name": "SortDescriptor",
                "callSignature": "SortDescriptor(property, order)",
                "comment": "Creates a sort descriptor based on the property to sort and the sort `Order`",
                "throws": [],
                "parameters": [
                  {
                    "name": "property",
                    "description": "based on which we should sort the results",
                    "type": "Property"
                  },
                  {
                    "name": "order",
                    "description": "of the sort results",
                    "type": "Order"
                  }
                ],
                "exceptions": []
              }
            ],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.query.Queryable.Property getProperty()",
                "name": "getProperty",
                "callSignature": "getProperty()",
                "comment": "The Property that is being sorted",
                "returns": {
                  "description": "The Property that is being sorted",
                  "type": "Property"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.query.SortDescriptor.Order getOrder()",
                "name": "getOrder",
                "callSignature": "getOrder()",
                "comment": "The order the sorted results should be returned in",
                "returns": {
                  "description": "The order the sorted results should be returned in",
                  "type": "Order"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String toString()",
                "name": "toString",
                "callSignature": "toString()",
                "comment": null,
                "returns": {
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "SortDescriptor",
          "comment": "Configures the sort descriptors used to order the result set. The sort descriptors specify how\nthe objects returned when the query is executed should be ordered (for example by creation date\nor index). The sort descriptors are applied in the order in which they are added to a Query.  A\nvalue of null (the default) means that no explicit sorting is applied and the results are\nreturned in an unspecified order.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.query.SortDescriptor",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Order",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.query.SortDescriptor$Order",
              "enumClasses": [],
              "fields": [
                {
                  "name": "ASCENDING",
                  "comment": null,
                  "type": "Order"
                },
                {
                  "name": "DESCENDING",
                  "comment": null,
                  "type": "Order"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": []
        },
        {
          "implementedInterfaces": [],
          "methods": {
            "constructor": [
              {
                "declarationSignature": "public Predicate(com.layer.sdk.query.Queryable.Property property, com.layer.sdk.query.Predicate.Operator operator, java.lang.Object value)",
                "name": "Predicate",
                "callSignature": "Predicate(property, operator, value)",
                "comment": "Creates a `Predicate` with the given property, operator, and value.",
                "throws": [],
                "parameters": [
                  {
                    "name": "property",
                    "description": "The property whose value is to be compared.",
                    "type": "Property"
                  },
                  {
                    "name": "operator",
                    "description": "The operator that determines how the property's value is compared to the reference value.",
                    "type": "Operator"
                  },
                  {
                    "name": "value",
                    "description": "The reference value to use in the comparison.",
                    "type": "Object"
                  }
                ],
                "exceptions": []
              },
              {
                "declarationSignature": "public Predicate(com.layer.sdk.query.Queryable.Property property, java.lang.String propertyKey, com.layer.sdk.query.Predicate.Operator operator, java.lang.Object value)",
                "name": "Predicate",
                "callSignature": "Predicate(property, propertyKey, operator, value)",
                "comment": "Creates a `Predicate` with the given property, property key, operator, and value.",
                "throws": [],
                "parameters": [
                  {
                    "name": "property",
                    "description": "The property whose value is to be compared.",
                    "type": "Property"
                  },
                  {
                    "name": "propertyKey",
                    "description": "The key of the property whose value is to be compared. This is unused if\n                   the property type does not support mutable keys.",
                    "type": "String"
                  },
                  {
                    "name": "operator",
                    "description": "The operator that determines how the property's value is compared to the reference value.",
                    "type": "Operator"
                  },
                  {
                    "name": "value",
                    "description": "The reference value to use in the comparison.",
                    "type": "Object"
                  }
                ],
                "exceptions": []
              }
            ],
            "static": [],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.query.Queryable.Property getProperty()",
                "name": "getProperty",
                "callSignature": "getProperty()",
                "comment": "Retrieves the property whose value the receiver will compare against the reference value.",
                "returns": {
                  "description": "the property whose value the receiver will compare against the reference value",
                  "type": "Property"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String getPropertyKey()",
                "name": "getPropertyKey",
                "callSignature": "getPropertyKey()",
                "comment": "Retrieves the key of the property to use in the comparison. This is used for Properties that\ncontain mutable keys. If a Property does not utilize such a key then this should be unused.",
                "returns": {
                  "description": "the property key to be used for comparison",
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public com.layer.sdk.query.Predicate.Operator getOperator()",
                "name": "getOperator",
                "callSignature": "getOperator()",
                "comment": "Retrieves the predicate operator that specifies how the property's value will be compared\nagainst the reference value.",
                "returns": {
                  "description": "the predicate operator that specifies how the property's value will be compared",
                  "type": "Operator"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.Object getValue()",
                "name": "getValue",
                "callSignature": "getValue()",
                "comment": "Retrieves the the reference object used for comparison",
                "returns": {
                  "description": "the reference object used for comparison",
                  "type": "Object"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public boolean isRelative()",
                "name": "isRelative",
                "callSignature": "isRelative()",
                "comment": "Checks whether the operator type of the `Predicate` is Relative",
                "returns": {
                  "description": "returns true if the `Operator` of this `Predicate` is Relative",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public boolean isEquality()",
                "name": "isEquality",
                "callSignature": "isEquality()",
                "comment": "Checks whether the operator type of the `Predicate` is comparing for Equality",
                "returns": {
                  "description": "returns true if the `Operator` of this `Predicate` is comparing for Equality",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public boolean isInclusion()",
                "name": "isInclusion",
                "callSignature": "isInclusion()",
                "comment": "Checks whether the operator type of the `Predicate` is comparing for Inclusion",
                "returns": {
                  "description": "returns true if the `Operator` of this `Predicate` is comparing for Inclusion",
                  "type": "boolean"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String toString()",
                "name": "toString",
                "callSignature": "toString()",
                "comment": null,
                "returns": {
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "Predicate",
          "comment": "The `Predicate` class is used to describe a comparison between the value of a specified property and an input\nvalue using a comparison operator.",
          "nestedClasses": [],
          "fullname": "com.layer.sdk.query.Predicate",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "Type",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.query.Predicate$Type",
              "enumClasses": [],
              "fields": [
                {
                  "name": "EQUALITY",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "RELATIVE",
                  "comment": null,
                  "type": "Type"
                },
                {
                  "name": "INCLUSIVE",
                  "comment": null,
                  "type": "Type"
                }
              ],
              "derivedClasses": []
            },
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [
                  {
                    "declarationSignature": "Operator(com.layer.sdk.query.Predicate.Type type)",
                    "name": "Operator",
                    "callSignature": "Operator(type)",
                    "comment": "Creates an operator",
                    "throws": [],
                    "parameters": [
                      {
                        "name": "type",
                        "description": "the type of operator",
                        "type": "Type"
                      }
                    ],
                    "exceptions": []
                  }
                ],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "public com.layer.sdk.query.Predicate.Type getType()",
                    "name": "getType",
                    "callSignature": "getType()",
                    "comment": "Reetreives the `Type` of operator",
                    "returns": {
                      "description": "the type of the operator",
                      "type": "Type"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "Operator",
              "comment": "The `Operator` enumeration defines the set of comparison operators available for use by `Predicate` objects.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.query.Predicate$Operator",
              "enumClasses": [],
              "fields": [
                {
                  "name": "EQUAL_TO",
                  "comment": "The property's value is equal to the given value.",
                  "type": "Operator"
                },
                {
                  "name": "NOT_EQUAL_TO",
                  "comment": "The property's value is not equal to the given value.",
                  "type": "Operator"
                },
                {
                  "name": "LESS_THAN",
                  "comment": "The property's value is less than the given value.",
                  "type": "Operator"
                },
                {
                  "name": "LESS_THAN_OR_EQUAL_TO",
                  "comment": "The property's value is less than or equal to the given value.",
                  "type": "Operator"
                },
                {
                  "name": "GREATER_THAN",
                  "comment": "The property's value is greater than the given value.",
                  "type": "Operator"
                },
                {
                  "name": "GREATER_THAN_OR_EQUAL_TO",
                  "comment": "The property's value is greater than or equal to the given value.",
                  "type": "Operator"
                },
                {
                  "name": "IN",
                  "comment": "The property's value is contained in the given collection of values.",
                  "type": "Operator"
                },
                {
                  "name": "NOT_IN",
                  "comment": "The property's value is not contained in the given collection of values.",
                  "type": "Operator"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": [
            {
              "name": "CompoundPredicate",
              "comment": "The `CompoundPredicate` class is a subclass of `Predicate` that provides support for combining\nmultiple sub-predicates into a grouping with a conjunction operator such as\n`And`, `Or`, or `Not`.",
              "fullname": "com.layer.sdk.query.CompoundPredicate"
            }
          ]
        },
        {
          "implementedInterfaces": [],
          "generics": [
            "Tquery"
          ],
          "methods": {
            "constructor": [],
            "static": [
              {
                "declarationSignature": "public static com.layer.sdk.query.Query.Builder builder(java.lang.Class type)",
                "name": "builder",
                "callSignature": "builder(type)",
                "comment": "A convenience Builder object that can be used to build queries by providing the `Queryable`\nclass and adding fields such as `Predicate`, limit, offset and `SortDescriptor` as needed",
                "returns": {
                  "type": "Builder"
                },
                "throws": [],
                "parameters": [
                  {
                    "name": "type",
                    "type": "Class"
                  }
                ],
                "exceptions": []
              }
            ],
            "instance": [
              {
                "declarationSignature": "public com.layer.sdk.query.Predicate getPredicate()",
                "name": "getPredicate",
                "callSignature": "getPredicate()",
                "comment": "The predicate of the Query.",
                "returns": {
                  "description": "The predicate of the Query.",
                  "type": "Predicate"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.Long getLimit()",
                "name": "getLimit",
                "callSignature": "getLimit()",
                "comment": "The limit configures the maximum number of objects to be returned when the query is executed.\nA value of `Long.MAX_VALUE` (the default) indicates that no limit should be applied.",
                "returns": {
                  "description": "The maximum number of results to be returned.",
                  "type": "Long"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.Long getOffset()",
                "name": "getOffset",
                "callSignature": "getOffset()",
                "comment": "The offset configures the number of rows that are to be skipped in the result set before\nresults are returned. The default value is zero. The `offset` isn't used if the `limit` is\nnot defined.",
                "returns": {
                  "description": "The number of rows that are skipped in the result set.",
                  "type": "Long"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.util.List getSortDescriptors()",
                "name": "getSortDescriptors",
                "callSignature": "getSortDescriptors()",
                "comment": "Gets the sort descriptors used to order the result set.\nThe sort descriptors specify how the objects returned when the query is executed should be\nordered (for example by creation date or index). The sort descriptors are\napplied in the order in which they appear in the `sortDescriptors` array. A value of nil (the\ndefault) means that no explicit sorting is applied and the results are returned in database\nrow order.",
                "returns": {
                  "description": "List of `SortDescriptors` used to order the result set of the `Query`",
                  "type": "List"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.Class getQueryClass()",
                "name": "getQueryClass",
                "callSignature": "getQueryClass()",
                "comment": "Gets the class that this query is constructed to run on.",
                "returns": {
                  "description": "The class that this query is constructed to run on.",
                  "type": "Class"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              },
              {
                "declarationSignature": "public java.lang.String toString()",
                "name": "toString",
                "callSignature": "toString()",
                "comment": null,
                "returns": {
                  "type": "String"
                },
                "throws": [],
                "parameters": [],
                "exceptions": []
              }
            ]
          },
          "name": "Query",
          "comment": "The `Query` class provides a flexible querying interface for Layer content.\n\nInstances of `Query` are used to query the local database for messaging content. Queries target a specific queryable class\nand apply a predicate that constrains the search. Predicates are expressed in terms of a public property (such as `createdAt` or `isUnread`), an operator\n(such as 'is equal to' or 'is greater than or equal to'), and a comparison value. The sort order of the results can be affected by applying one or more\nsort descriptors which also bind to a public property and are applied in either ascending or descending order. To facilitate pagination, queries may be further\nconstrained by applying a limit and offset value. Query results can be returned as either fully realized object instances, object identifiers, or as an aggregate\ncount of the total number of objects matching the query.",
          "nestedClasses": [
            {
              "implementedInterfaces": [],
              "generics": [
                "Tbuild"
              ],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": [
                  {
                    "declarationSignature": "public com.layer.sdk.query.Query.Builder predicate(com.layer.sdk.query.Predicate predicate)",
                    "name": "predicate",
                    "callSignature": "predicate(predicate)",
                    "comment": "Adds a predicate to the query",
                    "returns": {
                      "description": "Builder of the query that the predicate is being applied on",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "predicate",
                        "description": "predicate that will be applied for the query",
                        "type": "Predicate"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.query.Query.Builder limit(long limit)",
                    "name": "limit",
                    "callSignature": "limit(limit)",
                    "comment": "Adds a limit to the query.",
                    "returns": {
                      "description": "Builder of the query that the limit is being applied on",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "limit",
                        "description": "The that will be applied for the query. The limit configures the maximum\n             number of objects to be returned when the query is executed.",
                        "type": "long"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.query.Query.Builder offset(long offset)",
                    "name": "offset",
                    "callSignature": "offset(offset)",
                    "comment": "Adds an offset to the query",
                    "returns": {
                      "description": "Builder of the query that the offset is being applied on",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "offset",
                        "description": "Configures the number of rows that are to be skipped in the result set\n              before results are returned. The default value is zero. The `offset` isn't\n              used if the `limit` is not defined.",
                        "type": "long"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.query.Query.Builder sortDescriptor(com.layer.sdk.query.SortDescriptor... sortDescriptors)",
                    "name": "sortDescriptor",
                    "callSignature": "sortDescriptor(sortDescriptors)",
                    "comment": "Adds an offset to the query",
                    "returns": {
                      "description": "Builder of the query that the sort descriptors are being applied on.",
                      "type": "Builder"
                    },
                    "throws": [],
                    "parameters": [
                      {
                        "name": "sortDescriptors",
                        "description": "List of descriptors that specify order of the result set.",
                        "type": "SortDescriptor"
                      }
                    ],
                    "exceptions": []
                  },
                  {
                    "declarationSignature": "public com.layer.sdk.query.Query build()",
                    "name": "build",
                    "callSignature": "build()",
                    "comment": "Builds and returns the resultant query based on the parameters provided to the `Builder`",
                    "returns": {
                      "description": "The resultant `Query` based on the parameters provided to the `Builder`",
                      "type": "Query"
                    },
                    "throws": [],
                    "parameters": [],
                    "exceptions": []
                  }
                ]
              },
              "name": "Builder",
              "comment": null,
              "nestedClasses": [],
              "fullname": "com.layer.sdk.query.Query$Builder",
              "enumClasses": [],
              "fields": [],
              "derivedClasses": []
            }
          ],
          "fullname": "com.layer.sdk.query.Query",
          "enumClasses": [
            {
              "implementedInterfaces": [],
              "methods": {
                "constructor": [],
                "static": [],
                "instance": []
              },
              "name": "ResultType",
              "comment": "Specifies the type of result produced by the execution of a query.",
              "nestedClasses": [],
              "fullname": "com.layer.sdk.query.Query$ResultType",
              "enumClasses": [],
              "fields": [
                {
                  "name": "OBJECTS",
                  "comment": "The query is to return fully realized object instances.",
                  "type": "ResultType"
                },
                {
                  "name": "IDENTIFIERS",
                  "comment": "The query is to return object identifier Uri objects.",
                  "type": "ResultType"
                },
                {
                  "name": "COUNT",
                  "comment": "The query is to return a count of the number of results matching the executed query.",
                  "type": "ResultType"
                }
              ],
              "derivedClasses": []
            }
          ],
          "fields": [],
          "derivedClasses": []
        }
      ],
      "name": "com.layer.sdk.query"
    }
  ]
}